{"version":3,"sources":["../../src/directives/NgWidgetContainer.ts"],"names":[],"mappings":"AAAA,iCAAC;AACD,2BAA2B;AAC3B,OAAO,EAAa,SAAA,EAAW,UAAA,EAAY,QAAA,EAAU,YAAA,EAAc,wBAAA,EAAuF,eAAA,EAA6C,gBAAA,EAAkB,MAAA,EAAO,MAAO,eAAA,CAAgB;AAGvP,OAAO,EAAE,mBAAA,EAAoB,MAAO,mCAAA,CAAoC;AAGxE;IAqGC,eAAe;IACf,2BAAoB,QAAyB,EAClC,KAAiB,EACjB,SAAmB,EACnB,wBAAkD,EAClD,aAA+B;QAJtB,aAAQ,GAAR,QAAQ,CAAiB;QAClC,UAAK,GAAL,KAAK,CAAY;QACjB,cAAS,GAAT,SAAS,CAAU;QACnB,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,kBAAa,GAAb,aAAa,CAAkB;QA/E1C,kBAAkB;QACV,gBAAW,GAA2B,IAAI,YAAY,EAAY,CAAC;QACnE,WAAM,GAA2B,IAAI,YAAY,EAAY,CAAC;QAC9D,eAAU,GAA2B,IAAI,YAAY,EAAY,CAAC;QAClE,kBAAa,GAA2B,IAAI,YAAY,EAAY,CAAC;QACrE,aAAQ,GAA2B,IAAI,YAAY,EAAY,CAAC;QAChE,iBAAY,GAA2B,IAAI,YAAY,EAAY,CAAC;QACpE,iBAAY,GAAwC,IAAI,YAAY,EAAyB,CAAC;QAEtG,oBAAoB;QACb,aAAQ,GAAG,GAAG,CAAC;QACf,cAAS,GAAG,GAAG,CAAC;QAChB,YAAO,GAAG,CAAC,CAAC;QACZ,YAAO,GAAG,CAAC,CAAC;QACZ,cAAS,GAAG,EAAE,CAAC;QACf,gBAAW,GAAG,EAAE,CAAC;QACjB,iBAAY,GAAG,EAAE,CAAC;QAClB,eAAU,GAAG,EAAE,CAAC;QAChB,eAAU,GAAG,KAAK,CAAC;QACnB,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,IAAI,CAAC;QACjB,iBAAY,GAAG,IAAI,CAAC;QACpB,eAAU,GAAG,IAAI,CAAC;QAClB,YAAO,GAAG,IAAI,CAAC;QACf,aAAQ,GAAG,GAAG,CAAC;QACf,cAAS,GAAG,GAAG,CAAC;QAChB,WAAM,GAAG,CAAC,CAAC;QACX,iBAAY,GAAG,KAAK,CAAC;QACrB,wBAAmB,GAAG,CAAC,CAAC;QACxB,yBAAoB,GAAG,CAAC,CAAC;QAEhC,qBAAqB;QACb,WAAM,GAAoB,EAAE,CAAC;QAC7B,kBAAa,GAAa,IAAI,CAAC;QAC/B,kBAAa,GAAa,IAAI,CAAC;QAC/B,qBAAgB,GAAW,IAAI,CAAC;QAChC,cAAS,GAAmD,EAAE,CAAC,CAAC,sBAAsB;QAGtF,aAAQ,GAAG,CAAC,CAAC;QACb,aAAQ,GAAG,CAAC,CAAC;QACb,iBAAY,GAAG,CAAC,CAAC;QACjB,iBAAY,GAAG,CAAC,CAAC;QACjB,cAAS,GAAG,GAAG,CAAC;QAChB,eAAU,GAAG,GAAG,CAAC;QACjB,eAAU,GAAkC,IAAI,CAAC;QACjD,YAAO,GAAG,KAAK,CAAC;QAChB,oBAAe,GAAsC,IAAI,CAAC;QAC1D,eAAU,GAAG,KAAK,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;QAEpB,eAAU,GAAG,KAAK,CAAC;QACnB,mBAAc,GAAG,KAAK,CAAC;QAEvB,eAAU,GAAG,KAAK,CAAC;QACnB,gBAAW,GAAG,KAAK,CAAC;QACpB,mBAAc,GAAG,KAAK,CAAC;QACvB,eAAU,GAAG,CAAC,CAAC;QACf,eAAU,GAAG,CAAC,CAAC;QACf,eAAU,GAAG,KAAK,CAAC;QACnB,iBAAY,GAAG,KAAK,CAAC;QAGrB,YAAO,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;IAgBZ,CAAC;IAb9C,sBAAI,qCAAM;QADV,2CAA2C;aAC3C,UAAW,CAA2B;YACrC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAElB,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;gBACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC7D;QACF,CAAC;;;OAAA;IASD,kBAAkB;IACX,oCAAQ,GAAf;QACC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;QACnF,IAAI,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;SACjF;QACD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEM,uCAAW,GAAlB;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,qCAAS,GAAhB;QACC,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAEM,qCAAS,GAAhB,UAAiB,MAAgC;QAChD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,gBAAgB,GAAG,KAAK,CAAC;QAC7B,KAAK,IAAM,CAAC,IAAI,MAAM,EAAE;YACvB,IAAI,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;gBAC9B,IAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAM,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;gBAE3C,QAAQ,CAAC,EAAE;oBACV,KAAK,SAAS;wBACb,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;wBACrB,MAAM;oBACP,KAAK,WAAW;wBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACpC,MAAM;oBACP,KAAK,YAAY;wBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACrC,MAAM;oBACP,KAAK,YAAY;wBAChB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACpC,MAAM;oBACP,KAAK,aAAa;wBACjB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACtC,MAAM;oBACP,KAAK,WAAW;wBACf,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACrC,MAAM;oBACP,KAAK,WAAW;wBACf,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACvC,MAAM;oBACP,KAAK,UAAU;wBACd,gBAAgB,GAAG,gBAAgB,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC;wBAChE,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;wBACxC,MAAM;oBACP,KAAK,UAAU;wBACd,gBAAgB,GAAG,gBAAgB,IAAI,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC;wBAChE,IAAI,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;wBACxC,MAAM;oBACP,KAAK,cAAc;wBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACxC,MAAM;oBACP,KAAK,cAAc;wBAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACxC,MAAM;oBACP,KAAK,UAAU;wBACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACnC,MAAM;oBACP,KAAK,UAAU;wBACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACnC,MAAM;oBACP,KAAK,YAAY;wBAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACrC,MAAM;oBACP,KAAK,WAAW;wBACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACpC,MAAM;oBACP,KAAK,cAAc;wBAClB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACtC,MAAM;oBACP,KAAK,SAAS;wBACb,IAAI,IAAI,CAAC,OAAO,KAAK,GAAG,EAAE;4BACzB,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;4BACnB,IAAI,CAAC,YAAY,EAAE,CAAC;yBACpB;wBACD,MAAM;oBACP,KAAK,aAAa;wBACjB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACrC,MAAM;oBACP,KAAK,gBAAgB;wBACpB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACzC,MAAM;oBACP,KAAK,YAAY;wBAChB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACrC,MAAM;oBACP,KAAK,iBAAiB;wBACrB,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,CAAC;wBAEjD,IAAI,IAAI,CAAC,cAAc,EAAE;4BACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;yBAC5C;wBACD,MAAM;oBACP,KAAK,eAAe;wBACnB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;wBACvC,MAAM;oBACP,KAAK,qBAAqB;wBACzB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBAC/C,MAAM;oBACP,KAAK,sBAAsB;wBAC1B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBAChD,MAAM;iBACP;aACD;SACD;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,EAAE;gBACpC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;aACnD;iBAAM;gBACN,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC5B;SACD;QAED,IAAI,gBAAgB,EAAE;YACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,EAAE,0CAA0C;gBACvF,QAAQ,IAAI,CAAC,OAAO,EAAE;oBACrB,KAAK,MAAM,CAAC;oBACZ,KAAK,OAAO;wBACX,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBAClB,MAAM;oBACP,KAAK,IAAI,CAAC;oBACV,KAAK,MAAM,CAAC;oBACZ;wBACC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;wBAClB,MAAM;iBACP;aACD;YAED,IAAI,CAAC,6BAA6B,EAAE,CAAC;SACrC;QAED,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/C,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAEjD,IAAI,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ;YAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QACnF,IAAI,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS;YAAE,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QAExF,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnH,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS;YAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAEvH,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACxE,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QAExE,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,KAAmB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;YAA3B,IAAM,IAAI,SAAA;YACd,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClC;QAED,KAAmB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;YAA3B,IAAM,IAAI,SAAA;YACd,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACtB;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAEM,2CAAe,GAAtB,UAAuB,KAAa;QACnC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC/C,CAAC;IAEM,uCAAW,GAAlB,UAAmB,KAAa;QAC/B,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;IACrC,CAAC;IAEM,qCAAS,GAAhB;QACC,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;YACzB,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEhD,IAAI,OAAO,IAAI,IAAI,EAAE;gBACpB,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;iBAC9C;gBACD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAE5B,OAAO,IAAI,CAAC;aACZ;SACD;QAED,OAAO,KAAK,CAAC;IACd,CAAC;IAEM,sCAAU,GAAjB,UAAkB,OAAsB;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAChG,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QACjG,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QACjG,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAClG,CAAC;IAEM,sCAAU,GAAjB;QACC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,uCAAW,GAAlB;QACC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IACzB,CAAC;IAEM,wCAAY,GAAnB;QACC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC1B,CAAC;IAEM,yCAAa,GAApB;QACC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IAC3B,CAAC;IAEM,mCAAO,GAAd,UAAe,MAAgB;QAC9B,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACrB,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;YACnF,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;SAC/B;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,MAAM,CAAC,cAAc,EAAE,CAAC;QAExB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEM,sCAAU,GAAjB,UAAkB,MAAgB;QACjC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAE7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;gBAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aACzB;SACD;QAED,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;QAC5B,IAAI,IAAI,CAAC,YAAY;YAAE,OAAO;QAE9B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,IAAc,IAAK,OAAA,IAAI,CAAC,eAAe,EAAE,EAAtB,CAAsB,CAAC,CAAC;QAChE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC1B,CAAC;IAEM,sCAAU,GAAjB,UAAkB,QAAkB;QACnC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,QAAQ,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC;IAEM,0CAAc,GAArB;QACC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEM,yCAAa,GAApB;QACC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEM,8CAAkB,GAAzB,UAA0B,CAAM;QAC/B,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3B,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,oBAAoB,EAAE,EAAE;gBAClD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC5C,IAAI,CAAC,6BAA6B,EAAE,CAAC;gBACrC,IAAI,CAAC,YAAY,EAAE,CAAC;aACpB;SACD;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;IACpB,CAAC;IAEM,iDAAqB,GAA5B,UAA6B,CAAa;QACzC,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QAEnD,IAAI,MAAM,IAAI,IAAI,EAAE;YACnB,IAAI,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,CAAC,CAAC,cAAc,EAAE,CAAC;aACnB;iBAAM,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,CAAC,CAAC,cAAc,EAAE,CAAC;aACnB;SACD;IACF,CAAC;IAEM,+CAAmB,GAA1B,UAA2B,CAAM;QAChC,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SAClB;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACpB;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,EAAE;YAChD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC1B;IACF,CAAC;IAEM,iDAAqB,GAA5B,UAA6B,CAAM;QAClC,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,OAAO;SACP;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACnB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,OAAO;SACP;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACd;aAAM,IAAI,IAAI,CAAC,UAAU,EAAE;YAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAChB;aAAM;YACN,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAEjD,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;aACpB;SACD;IACF,CAAC;IAED,mBAAmB;IACX,yDAA6B,GAArC;QACC,KAAmB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;YAA3B,IAAM,IAAI,SAAA;YACd,IAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACrC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;YAE5B,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBAChI,SAAS;aACT;YAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAE3B,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE;gBAChD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACnB;iBAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE;gBACvD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACnB;YAED,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;gBAC1E,IAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBACrD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;aAClC;YAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACtB;IACF,CAAC;IAEO,8CAAkB,GAA1B;QACC,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBAC/C,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;gBACtE,IAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;gBAEhF,IAAI,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC;gBACtD,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;gBACjD,IAAI,QAAQ,GAAG,CAAC;oBAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC3C;SACD;QAED,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC1E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;SACzF;IACF,CAAC;IAEO,+CAAmB,GAA3B;QACC,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;gBAC/C,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;gBACtE,IAAM,SAAS,GAAW,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;gBAElF,IAAI,SAAS,GAAW,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBAClF,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,CAAC;oBAAE,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;aAC9C;SACD;QAED,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;YAC5E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC3F;IACF,CAAC;IAEO,wCAAY,GAApB;QACC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,cAAc,EAAE;YAC5C,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE;gBAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;aACnD;iBAAM,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,EAAE;gBACvD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;aACnD;iBAAM,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;gBACtD,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;oBAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;iBACnD;qBAAM,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;oBACjC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC;iBACnD;aACD;SACD;IACF,CAAC;IAEO,yCAAa,GAArB,UAAsB,OAAY;QAAlC,iBAMC;QALA,OAAO,CAAC,gBAAgB,CAAC,UAAC,MAAW,IAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/F,OAAO,CAAC,kBAAkB,CAAC,UAAC,MAAW,IAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QACjG,OAAO,CAAC,kBAAkB,CAAC,UAAC,MAAW,IAAO,OAAO,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAElF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAEO,wCAAY,GAApB,UAAqB,CAAM;QAC1B,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAEjD,IAAI,IAAI,EAAE;gBACT,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC1B;SACD;IACF,CAAC;IAEO,sCAAU,GAAlB,UAAmB,CAAM;QACxB,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAM,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;YAEjD,IAAI,IAAI,EAAE;gBACT,IAAM,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnC,IAAM,OAAO,GAAG,EAAE,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC;gBAChG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;gBAC1D,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAAC,0BAA0B,EAAE,CAAC,CAAC;iBAClF;gBAGD,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;gBAC1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAExB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAExB,IAAI,IAAI,CAAC,WAAW,EAAE;oBACrB,IAAI,CAAC,QAAQ,EAAE,CAAC;iBAChB;aACD;SACD;IACF,CAAC;IAEO,oCAAQ,GAAhB;QACC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;IAC1F,CAAC;IAEO,sCAAU,GAAlB;QACC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IAC3E,CAAC;IAEO,iCAAK,GAAb,UAAc,CAAM;QACnB,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;aACrB;YAED,IAAI,MAAM,CAAC,YAAY,EAAE;gBACxB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE;oBAChC,MAAM,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC;iBAC9B;qBAAM,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE;oBACjD,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE,CAAC;iBACxC;aACD;iBAAM,IAAU,QAAS,CAAC,SAAS,EAAE;gBAC/B,QAAS,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aAClC;YAED,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACpD,IAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAElD,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YACvD,IAAI,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACtD,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAE1C,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAE/C,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;gBAC1C,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aAC/C;YAED,IAAI,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,EAAE;gBAChE,8FAA8F;gBAC7F,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;oBACtB,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;iBACvC;gBACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC7D,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBAEvD,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC/D,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE;wBACzF,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;4BACtB,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;yBACrD;wBACD,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;qBACvC;oBACD,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;wBACtB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;qBAC5C;oBACD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBACjC;aACD;YAED,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACrB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC3C;YAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SACjC;IACF,CAAC;IAEO,mCAAO,GAAf,UAAgB,CAAM;QACrB,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,MAAM,CAAC,YAAY,EAAE;gBACxB,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE;oBAChC,MAAM,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,CAAC;iBAC9B;qBAAM,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE;oBACjD,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE,CAAC;iBACxC;aACD;iBAAM,IAAU,QAAS,CAAC,SAAS,EAAE;gBAC/B,QAAS,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;aAClC;YAED,IAAM,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC3C,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;YACjD,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;YACpD,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;YACrG,IAAI,IAAI,GAAG,IAAI,CAAC,gBAAgB,KAAK,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;YAEnG,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ;gBAAE,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/C,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS;gBAAE,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;YACjD,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ;gBAAE,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;YAC3E,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS;gBAAE,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC;YAE7E,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YACnD,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YAExD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC;gBAAE,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAEtG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,QAAQ,CAAC;gBAAE,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAEtG,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAElD,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,EAAE;gBAC3D,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBACtD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAEhD,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;oBAC/D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;oBAC5C,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;iBACtC;aACD;YAED,IAAI,CAAC,IAAI,CAAC,UAAU;gBAAE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAEnE,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YAEnH,IAAI,IAAI,CAAC,gBAAgB,KAAK,QAAQ;gBAAE,OAAO,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;YAC9E,IAAI,IAAI,CAAC,gBAAgB,KAAK,OAAO;gBAAE,OAAO,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC;YAE7E,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACvC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;SACnC;IACF,CAAC;IAEO,qCAAS,GAAjB,UAAkB,CAAM;QACvB,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YACvD,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,0BAA0B,EAAE,CAAC;YACzE,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;aAC1E;YACD,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAC5C,2BAA2B;YAC3B,gDAAgD;YAChD,WAAW;YACX,4DAA4D;YAC5D,8CAA8C;YAC9C,iDAAiD;YACjD,YAAY;YACZ,uDAAuD;YACvD,uFAAuF;YACvF,gDAAgD;YAChD,KAAK;YACL,IAAI;YACJ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAEpC,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;YACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YAE/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEzB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACrB,IAAI,CAAC,UAAU,EAAE,CAAC;aAClB;SACD;IACF,CAAC;IAEO,uCAAW,GAAnB,UAAoB,CAAM;QACzB,IAAI,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAExB,IAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAE9C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAEpC,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YACvC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAC3C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;YAE/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACzB;IACF,CAAC;IAEO,wCAAY,GAApB,UAAqB,CAAS,EAAE,CAAS;QACxC,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAClF,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;QACnF,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;IACnC,CAAC;IAEO,8CAAkB,GAA1B,UAA2B,KAAa,EAAE,MAAc;QACvD,KAAK,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QAC5C,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QAE7C,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7G,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAE/G,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;YAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9F,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;YAAE,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAE9F,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;IACnC,CAAC;IAEO,kDAAsB,GAA9B,UAA+B,IAAY,EAAE,GAAW;QACvD,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACnG,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAEnG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QACxF,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YAAE,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QAExF,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;IACnC,CAAC;IAEO,6CAAiB,GAAzB,UAA0B,GAAsB,EAAE,IAAmB;QACpE,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAEjD,IAAI,SAAS,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QAE9D,OAAO,SAAS,CAAC,IAAI,CAAC,UAAC,CAAW;YACjC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;IACJ,CAAC;IAEO,0CAAc,GAAtB,UAAuB,GAAsB,EAAE,IAAmB;QACjE,IAAM,OAAO,GAAoB,EAAE,CAAC;QAEpC,IAAG,CAAC,GAAG,CAAC,GAAG,EAAE;YACZ,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SACZ;QACD,IAAG,CAAC,GAAG,CAAC,GAAG,EAAE;YACZ,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;SACZ;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;gBACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAChC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;wBACrD,IAAM,IAAI,GAAa,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;wBAEhE,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;4BAAE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;wBAElD,IAAM,OAAO,GAAsB,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBAC5D,IAAM,QAAQ,GAAkB,IAAI,CAAC,OAAO,EAAE,CAAC;wBAE/C,CAAC,GAAG,OAAO,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;qBACvC;iBACD;aACD;SACD;QAED,OAAO,OAAO,CAAC;IAChB,CAAC;IAEO,8CAAkB,GAA1B,UAA2B,GAAsB,EAAE,IAAmB;QACrE,IAAI,IAAI,CAAC,YAAY;YAAG,OAAO;QAE/B,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACzC,IAAM,UAAU,GAAoB,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAEnE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAEpC,IAAM,OAAO,GAAsB,UAAU,CAAC,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;YACrE,IAAM,QAAQ,GAAkB,UAAU,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YAExD,QAAQ,IAAI,CAAC,OAAO,EAAE;gBACrB,KAAK,IAAI,CAAC;gBACV,KAAK,MAAM,CAAC;gBACZ;oBACC,IAAM,MAAM,GAAW,OAAO,CAAC,GAAG,CAAC;oBACnC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;oBAE/B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;wBAC9C,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;wBAC/B,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC;qBACrB;oBACD,MAAM;gBACP,KAAK,MAAM,CAAC;gBACZ,KAAK,OAAO;oBACX,IAAM,MAAM,GAAW,OAAO,CAAC,GAAG,CAAC;oBACnC,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;oBAE/B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE;wBAC9C,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC;wBACrB,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;qBAC/B;oBACD,MAAM;aACP;YAED,UAAU,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YAEvC,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/B,UAAU,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAC;SAC/B;IACF,CAAC;IAEO,wCAAY,GAApB,UAAqB,GAAuB,EAAE,IAAoB;QACjE,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;QAC5B,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,OAAO;SACP;QACD,IAAI,GAAG,IAAI,CAAC,IAAI;YAAE,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAE1F,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YAC3D,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YAC7C,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SACpC;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YAClE,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YAC7C,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SACpC;QAED,QAAQ,IAAI,CAAC,OAAO,EAAE;YACrB,KAAK,IAAI,CAAC;YACV,KAAK,MAAM;gBACV,IAAM,MAAM,GAAkB,CAAC,CAAC,CAAC,CAAC;gBAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;oBAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAEzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;oBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;wBAAE,SAAS;oBAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;wBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;4BAAE,MAAM;wBAC3C,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;4BAAE,SAAS;wBAE5B,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;4BACjC,IAAM,IAAI,GAAa,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC5C,IAAI,IAAI,CAAC,OAAO;gCAAE,SAAS;4BAE3B,IAAM,OAAO,GAAsB,IAAI,CAAC,iBAAiB,EAAE,CAAC;4BAC5D,IAAM,QAAQ,GAAkB,IAAI,CAAC,OAAO,EAAE,CAAC;4BAE/C,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC;gCAAE,SAAS,CAAC,sCAAsC;4BAE5F,IAAI,MAAM,GAAW,MAAM,CAAC,CAAC,CAAC,CAAC;4BAE/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCACpC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;6BAC3C;4BAED,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAW,kDAAkD;gCAC7H,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAA4B,0CAA0C;oCACjH,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,IAAkC,2CAA2C;wCAC9G,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAK,+DAA+D;oCAChI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAwB,qCAAqC;iCACrH;6BACD;4BAED,IAAM,MAAM,GAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;4BAE1D,IAAI,MAAM,KAAK,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,EAAE,qDAAqD;gCAC7H,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gCAE3B,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gCAE7B,IAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;6BACtB;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCACpC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,8CAA8C;6BACnF;yBACD;qBACD;iBACD;gBACD,MAAM;YACP,KAAK,MAAM,CAAC;YACZ,KAAK,OAAO;gBACX,IAAM,MAAM,GAAkB,CAAC,CAAC,CAAC,CAAC;gBAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;oBAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAEzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;oBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;wBAAE,SAAS;oBAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;wBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;4BAAE,MAAM;wBAC3C,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;4BAAE,SAAS;wBAE5B,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;4BACjC,IAAM,IAAI,GAAa,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC5C,IAAM,QAAQ,GAAkB,IAAI,CAAC,OAAO,EAAE,CAAC;4BAC/C,IAAM,OAAO,GAAsB,IAAI,CAAC,iBAAiB,EAAE,CAAC;4BAE5D,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC;gCAAE,SAAS,CAAC,sCAAsC;4BAE5F,IAAI,MAAM,GAAW,MAAM,CAAC,CAAC,CAAC,CAAC;4BAE/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCACpC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;6BAC3C;4BAED,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAW,+CAA+C;gCAC1H,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAA4B,0CAA0C;oCACjH,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,IAAkC,2CAA2C;wCAC9G,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAK,+DAA+D;oCAChI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAwB,qCAAqC;iCACzG;6BACD;4BAED,IAAM,MAAM,GAAsB,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;4BAEtE,iIAAiI;4BACjI,IAAI,MAAM,KAAK,OAAO,CAAC,GAAG,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,EAAE,qDAAqD;gCACrJ,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gCAC3B,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;oCACtB,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;iCACpG;gCAED,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gCAE7B,IAAI,CAAC,cAAc,EAAE,CAAC;gCACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;6BACtB;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCACpC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,8CAA8C;6BACnF;yBACD;qBACD;iBACD;gBACD,MAAM;YACP;gBACC,MAAM;SACP;IACF,CAAC;IAEO,+CAAmB,GAA3B,UAA4B,GAAuB,EAAE,IAAoB;QACxE,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;QAC5B,IAAI,IAAI,CAAC,YAAY,EAAE;YACtB,OAAO;SACP;QACD,IAAI,GAAG,IAAI,CAAC,IAAI;YAAE,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;QAE1F,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YAC3D,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YAC7C,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SACpC;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;YAClE,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;YAC7C,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SACpC;QAED,QAAQ,IAAI,CAAC,OAAO,EAAE;YACrB,KAAK,IAAI,CAAC;YACV,KAAK,MAAM;gBACV,IAAM,MAAM,GAAkB,CAAC,CAAC,CAAC,CAAC;gBAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;oBAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAEzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;oBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;wBAAE,SAAS;oBAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;wBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;4BAAE,MAAM;wBAC3C,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;4BAAE,SAAS;wBAE5B,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;4BACjC,IAAM,IAAI,GAAa,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC5C,IAAI,IAAI,CAAC,OAAO;gCAAE,SAAS;4BAE3B,IAAM,OAAO,GAAsB,IAAI,CAAC,iBAAiB,EAAE,CAAC;4BAC5D,IAAM,QAAQ,GAAkB,IAAI,CAAC,OAAO,EAAE,CAAC;4BAE/C,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC;gCAAE,SAAS,CAAC,sCAAsC;4BAE5F,IAAI,MAAM,GAAW,MAAM,CAAC,CAAC,CAAC,CAAC;4BAE/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCACpC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;6BAC3C;4BAED,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAW,kDAAkD;gCAC7H,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAA4B,0CAA0C;oCACjH,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,IAAkC,2CAA2C;wCAC9G,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAK,+DAA+D;oCAChI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAwB,qCAAqC;iCACzG;6BACD;4BAED,IAAM,MAAM,GAAsB,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;4BAE1D,IAAI,MAAM,KAAK,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,EAAE,qDAAqD;gCAC7H,8BAA8B;gCAE9B,gCAAgC;gCAEhC,yBAAyB;gCACzB,yBAAyB;gCACzB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;6BACtD;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCACpC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,8CAA8C;6BACnF;yBACD;qBACD;iBACD;gBACD,MAAM;YACP,KAAK,MAAM,CAAC;YACZ,KAAK,OAAO;gBACX,IAAM,MAAM,GAAkB,CAAC,CAAC,CAAC,CAAC;gBAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE;oBAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBAEzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;oBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;wBAAE,SAAS;oBAE9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE;wBAC1C,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,SAAS;4BAAE,MAAM;wBAC3C,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;4BAAE,SAAS;wBAE5B,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;4BACjC,IAAM,IAAI,GAAa,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC5C,IAAM,QAAQ,GAAkB,IAAI,CAAC,OAAO,EAAE,CAAC;4BAC/C,IAAM,OAAO,GAAsB,IAAI,CAAC,iBAAiB,EAAE,CAAC;4BAE5D,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC,IAAI,OAAO,CAAC,GAAG,KAAK,CAAC;gCAAE,SAAS,CAAC,sCAAsC;4BAE5F,IAAI,MAAM,GAAW,MAAM,CAAC,CAAC,CAAC,CAAC;4BAE/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCACpC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;6BAC3C;4BAED,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAW,+CAA+C;gCAC1H,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAA4B,0CAA0C;oCACjH,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,IAAkC,2CAA2C;wCAC9G,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAK,+DAA+D;oCAChI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAwB,qCAAqC;iCACzG;6BACD;4BAED,IAAM,MAAM,GAAsB,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC;4BAE1D,IAAI,MAAM,KAAK,OAAO,CAAC,GAAG,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,EAAE,qDAAqD;gCACrJ,8BAA8B;gCAC9B,uGAAuG;gCAEvG,gCAAgC;gCAEhC,yBAAyB;gCACzB,yBAAyB;gCACzB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;6BACtD;4BAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gCACpC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,8CAA8C;6BACnF;yBACD;qBACD;iBACD;gBACD,MAAM;YACP;gBACC,MAAM;SACP;IACF,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,GAAsB,EAAE,IAAmB;QACnE,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YAC7E,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;gBACtC,IAAM,UAAU,GAAe,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;gBAE9D,QAAQ,IAAI,CAAC,OAAO,EAAE;oBACrB,KAAK,IAAI,CAAC;oBACV,KAAK,MAAM,CAAC;oBACZ;wBACC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,UAAC,IAAc,IAAK,OAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAArB,CAAqB,CAAC,CAAC,CAAC;wBAC1F,MAAM;oBACP,KAAK,MAAM,CAAC;oBACZ,KAAK,OAAO;wBACX,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,CAAC,UAAC,IAAc,IAAK,OAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAArB,CAAqB,CAAC,CAAC,CAAC;wBAC1F,MAAM;iBACP;aACD;YAGD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;gBACtC,GAAG,CAAC,GAAG,EAAE,CAAC;gBACV,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;aACZ;YACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;gBACtC,GAAG,CAAC,GAAG,EAAE,CAAC;gBACV,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;aACZ;SACD;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,GAAsB,EAAE,IAAmB;QACnE,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1F,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,GAAsB,EAAE,IAAmB;QACnE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,GAAG,CAAC,GAAG,EAAG,CAAC;SACX;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IAEO,6CAAiB,GAAzB,UAA0B,GAAsB,EAAE,IAAmB;QACpE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,CAAC,EAAE,CAAC;SACT;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,GAAsB,EAAE,IAAmB;QACnE,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1F,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,GAAsB,EAAE,IAAmB;QACnE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,GAAG,CAAC,GAAG,EAAE,CAAC;SACV;QACD,OAAO,GAAG,CAAC;IACZ,CAAC;IAEO,6CAAiB,GAAzB,UAA0B,GAAsB,EAAE,IAAmB;QACpE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpD,IAAI,CAAC,CAAC,EAAE,CAAC;SACT;QACD,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,2CAAe,GAAvB,UAAwB,GAAsB,EAAE,IAAmB;QAClE,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC7E,CAAC;IAEO,2CAAe,GAAvB,UAAwB,GAAsB,EAAE,IAAmB;QAClE,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,GAAsB,EAAE,IAAmB;QACnE,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IACvE,CAAC;IAEO,sCAAU,GAAlB,UAAmB,IAAc;QAChC,mEAAmE;QACnE,WAAW;QACX,IAAI;QACJ,IAAI,GAAG,GAAsB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACtD,IAAM,IAAI,GAAkB,IAAI,CAAC,OAAO,EAAE,CAAC;QAE3C,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;YACtC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YACnC,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC/B;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAChC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAE1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAChC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;aAChD;SACD;IACF,CAAC;IAEO,2CAAe,GAAvB,UAAwB,IAAc;QACrC,KAAK,IAAM,CAAC,IAAI,IAAI,CAAC,SAAS;YAC7B,KAAK,IAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI;oBAChC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAEO,uCAAW,GAAnB;QACC,uBAAuB;QACvB,KAAK,IAAM,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;YAC/B,KAAK,IAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;gBAClC,IAAM,IAAI,GAAa,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAM,SAAS,GAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAS,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC;gBACzE,IAAM,SAAS,GAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAS,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC;gBAEzE,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,SAAS,EAAE;oBAC9E,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5B;aACD;YAED,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;gBAChD,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;aACzB;SACD;IACF,CAAC;IAEO,uCAAW,GAAnB;QACC,IAAI,IAAI,CAAC,UAAU;YAAE,OAAO;QAC5B,IAAM,MAAM,GAAW,IAAI,CAAC,UAAU,EAAE,CAAC;QACzC,IAAM,MAAM,GAAW,IAAI,CAAC,UAAU,EAAE,CAAC;QAEzC,IAAI,MAAM,KAAK,IAAI,CAAC,UAAU,IAAI,MAAM,KAAK,IAAI,CAAC,UAAU,EAAE;YAC7D,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;SACzB;QAED,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,yEAAyE;QACpJ,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IAC7I,CAAC;IAEO,sCAAU,GAAlB;QACC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,IAAc,IAAK,OAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAzB,CAAyB,CAAC,CAAC,CAAC;IAC7F,CAAC;IAEO,sCAAU,GAAlB;QACC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,IAAc,IAAK,OAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,EAAzB,CAAyB,CAAC,CAAC,CAAC;IAC7F,CAAC;IAEO,6CAAiB,GAAzB,UAA0B,CAAM;QAC/B,IAAI,CAAO,MAAO,CAAC,UAAU,IAAI,CAAC,YAAY,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE;YAC7F,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SAC9D;QAED,IAAM,MAAM,GAAQ,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QAErE,IAAI,IAAI,GAAW,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;QAC3C,IAAI,GAAG,GAAW,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC;QAEzC,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM;YAAE,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC;QAC1E,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO;YAAE,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;QAE5E,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE;YACxC,IAAI,IAAI,CAAC,CAAC;YACV,GAAG,IAAI,CAAC,CAAC;SACT;QAED,OAAO;YACN,IAAI,EAAE,IAAI;YACV,GAAG,EAAE,GAAG;SACR,CAAC;IACH,CAAC;IAEO,qDAAyB,GAAjC,UAAkC,CAAM;QACvC,IAAI,CAAO,MAAO,CAAC,UAAU,IAAI,CAAC,YAAY,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,cAAc,CAAC,EAAE;YAC7F,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SAC9D;QAED,OAAO;YACN,IAAI,EAAE,CAAC,CAAC,OAAO;YACf,GAAG,EAAE,CAAC,CAAC,OAAO;SACd,CAAC;IACH,CAAC;IAEO,gDAAoB,GAA5B;QACC,IAAM,QAAQ,GAAW,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,KAAK,CAAC;QAChF,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACpF,CAAC;IAEO,6CAAiB,GAAzB;QACC,IAAM,SAAS,GAAW,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;QAClF,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IACtF,CAAC;IAEO,gDAAoB,GAA5B,UAA6B,QAAuC;QACnE,KAAmB,UAAW,EAAX,KAAA,IAAI,CAAC,MAAM,EAAX,cAAW,EAAX,IAAW,EAAE;YAA3B,IAAM,IAAI,SAAA;YACd,IAAM,IAAI,GAAwB,IAAI,CAAC,aAAa,EAAE,CAAC;YACvD,IAAM,GAAG,GAAkC,IAAI,CAAC,WAAW,EAAE,CAAC;YAE9D,IAAI,QAAQ,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,QAAQ,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC5G,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,QAAQ,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE;gBACtG,OAAO,IAAI,CAAC;aACZ;SACD;QAED,OAAO,IAAI,CAAC;IACb,CAAC;IAEO,8CAAkB,GAA1B,UAA2B,IAAc;QACxC,IAAM,GAAG,GAAsB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACxD,IAAM,IAAI,GAAkB,IAAI,CAAC,OAAO,EAAE,CAAC;QAE3C,IAAM,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,CAAC;QAC3F,IAAM,YAAY,GAAsC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACnG,IAAI,CAAC,eAAe,GAAG,YAAY,CAAC;QACpC,IAAM,WAAW,GAAwB,YAAY,CAAC,QAAQ,CAAC;QAC/D,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC/B,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACzC,WAAW,CAAC,eAAe,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;QAC5D,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAEO,6CAAiB,GAAzB;QACC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAC,IAAc,IAAK,OAAA,IAAI,CAAC,cAAc,EAAE,EAArB,CAAqB,CAAC,CAAC,CAAC;IACpF,CAAC;IAj2CD,kBAAkB;IACH,sCAAoB,GAA6B;QAC/D,OAAO,EAAE,CAAC,EAAE,CAAC;QACb,SAAS,EAAE,IAAI;QACf,SAAS,EAAE,IAAI;QACf,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,CAAC;QACX,YAAY,EAAE,CAAC;QACf,YAAY,EAAE,CAAC;QACf,SAAS,EAAE,GAAG;QACd,UAAU,EAAE,GAAG;QACf,OAAO,EAAE,MAAM;QACf,SAAS,EAAE,GAAG;QACd,UAAU,EAAE,GAAG;QACf,WAAW,EAAE,KAAK;QAClB,UAAU,EAAE,IAAI;QAChB,WAAW,EAAE,KAAK;QAClB,cAAc,EAAE,KAAK;QACrB,UAAU,EAAE,KAAK;QACjB,YAAY,EAAE,KAAK;QACnB,aAAa,EAAE,KAAK;QACpB,mBAAmB,EAAE,CAAC;QACtB,oBAAoB,EAAE,CAAC;QACvB,KAAK,EAAE,KAAK;KACZ,CAAC;IA00CI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACzB,QAAQ,EAAE,qBAAqB;oBAC/B,MAAM,EAAE,CAAC,2BAA2B,CAAC;oBACrC,IAAI,EAAE;wBACL,aAAa,EAAE,+BAA+B;wBAC9C,aAAa,EAAE,+BAA+B;wBAC9C,WAAW,EAAE,6BAA6B;wBAC1C,cAAc,EAAE,+BAA+B;wBAC/C,aAAa,EAAE,+BAA+B;wBAC9C,YAAY,EAAE,6BAA6B;wBAC3C,iBAAiB,EAAE,4BAA4B;wBAC/C,sBAAsB,EAAE,+BAA+B;wBACvD,oBAAoB,EAAE,6BAA6B;qBACnD;iBACD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,eAAe,GAAG;QACzB,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,gBAAgB,GAAG;KACzB,EAN6F,CAM7F,CAAC;IACK,gCAAc,GAA2C;QAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAClC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAC7B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACjC,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACpC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAC/B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QACnC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAClC,CAAC;IACF,wBAAC;CAr4CD,AAq4CC,IAAA;SAr4CY,iBAAiB","file":"NgWidgetContainer.js","sourceRoot":"","sourcesContent":["// tslint:disable:max-line-length\r\n// tslint:disable:quotemark\r\nimport { Component, Directive, ElementRef, Renderer, EventEmitter, ComponentFactoryResolver, Host, ViewEncapsulation, Type, ComponentRef, KeyValueDiffer, KeyValueDiffers, OnInit, OnDestroy, DoCheck, ViewContainerRef, Output } from '@angular/core';\r\nimport { INgWidgetConfig, INgWidgetEvent, INgWidgetPosition, INgWidgetSize, INgWidgetContainerRawPosition, INgWidgetDimensions, INgWidgetContainerConfig } from \"../interfaces/INgDraggableWidgetConfig\";\r\nimport { NgWidget } from './NgWidget';\r\nimport { NgWidgetPlaceholder } from '../components/NgWidgetPlaceholder';\r\n\r\n\r\nexport class NgWidgetContainer implements OnInit, DoCheck, OnDestroy {\r\n\t// \tdefault config\r\n\tprivate static CONST_DEFAULT_CONFIG: INgWidgetContainerConfig = {\r\n\t\tmargins: [10],\r\n\t\tdraggable: true,\r\n\t\tresizable: true,\r\n\t\tmax_cols: 0,\r\n\t\tmax_rows: 0,\r\n\t\tvisible_cols: 0,\r\n\t\tvisible_rows: 0,\r\n\t\tcol_width: 250,\r\n\t\trow_height: 250,\r\n\t\tcascade: 'left',\r\n\t\tmin_width: 100,\r\n\t\tmin_height: 100,\r\n\t\tfix_to_grid: false,\r\n\t\tauto_style: true,\r\n\t\tauto_resize: false,\r\n\t\tmaintain_ratio: false,\r\n\t\tprefer_new: false,\r\n\t\tzoom_on_drag: false,\r\n\t\tallow_overlap: false,\r\n\t\twidget_width_factor: 0,\r\n\t\twidget_height_factor: 0,\r\n\t\tdebug: false\r\n\t};\r\n\r\n\t// \tevent Emitters\r\n\t public onDragStart: EventEmitter<NgWidget> = new EventEmitter<NgWidget>();\r\n\t public onDrag: EventEmitter<NgWidget> = new EventEmitter<NgWidget>();\r\n\t public onDragStop: EventEmitter<NgWidget> = new EventEmitter<NgWidget>();\r\n\t public onResizeStart: EventEmitter<NgWidget> = new EventEmitter<NgWidget>();\r\n\t public onResize: EventEmitter<NgWidget> = new EventEmitter<NgWidget>();\r\n\t public onResizeStop: EventEmitter<NgWidget> = new EventEmitter<NgWidget>();\r\n\t public onItemChange: EventEmitter<Array<INgWidgetEvent>> = new EventEmitter<Array<INgWidgetEvent>>();\r\n\r\n\t// \tpublic variables\r\n\tpublic colWidth = 250;\r\n\tpublic rowHeight = 250;\r\n\tpublic minCols = 1;\r\n\tpublic minRows = 1;\r\n\tpublic marginTop = 10;\r\n\tpublic marginRight = 10;\r\n\tpublic marginBottom = 10;\r\n\tpublic marginLeft = 10;\r\n\tpublic isDragging = false;\r\n\tpublic isResizing = false;\r\n\tpublic autoStyle = true;\r\n\tpublic resizeEnable = true;\r\n\tpublic dragEnable = true;\r\n\tpublic cascade = 'up';\r\n\tpublic minWidth = 100;\r\n\tpublic minHeight = 100;\r\n\tpublic zIndex = 1;\r\n\tpublic allowOverlap = false;\r\n\tpublic widget_width_factor = 0;\r\n\tpublic widget_height_factor = 0;\r\n\r\n\t// \tprivate variables\r\n\tprivate _items: Array<NgWidget> = [];\r\n\tprivate _draggingItem: NgWidget = null;\r\n\tprivate _resizingItem: NgWidget = null;\r\n\tprivate _resizeDirection: string = null;\r\n\tprivate _itemGrid: { [key: number]: { [key: number]: NgWidget } } = {}; // { 1: { 1: null } };\r\n\tprivate _containerWidth: number;\r\n\tprivate _containerHeight: number;\r\n\tprivate _maxCols = 0;\r\n\tprivate _maxRows = 0;\r\n\tprivate _visibleCols = 0;\r\n\tprivate _visibleRows = 0;\r\n\tprivate _setWidth = 250;\r\n\tprivate _setHeight = 250;\r\n\tprivate _posOffset: INgWidgetContainerRawPosition = null;\r\n\tprivate _adding = false;\r\n\tprivate _placeholderRef: ComponentRef<NgWidgetPlaceholder> = null;\r\n\tprivate _fixToGrid = false;\r\n\tprivate _autoResize = false;\r\n\tprivate _differ: KeyValueDiffer<String,any>;\r\n\tprivate _destroyed = false;\r\n\tprivate _maintainRatio = false;\r\n\tprivate _aspectRatio: number;\r\n\tprivate _preferNew = false;\r\n\tprivate _zoomOnDrag = false;\r\n\tprivate _limitToScreen = false;\r\n\tprivate _curMaxRow = 0;\r\n\tprivate _curMaxCol = 0;\r\n\tprivate _dragReady = false;\r\n\tprivate _resizeReady = false;\r\n\r\n\r\n\tprivate _config = NgWidgetContainer.CONST_DEFAULT_CONFIG;\r\n\r\n\t// \t[ng-widget-container] attribute handler\r\n\tset config(v: INgWidgetContainerConfig) {\r\n\t\tthis.setConfig(v);\r\n\r\n\t\tif (this._differ == null && v != null) {\r\n\t\t\tthis._differ = this._differs.find(this._config).create(null);\r\n\t\t}\r\n\t}\r\n\r\n\t// \tconstructor\r\n\tconstructor(private _differs: KeyValueDiffers,\r\n\t\t\t\tprivate _ngEl: ElementRef,\r\n\t\t\t\tprivate _renderer: Renderer,\r\n\t\t\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\r\n\t\t\t\tprivate _containerRef: ViewContainerRef) {}\r\n\r\n\t// \tpublic methods\r\n\tpublic ngOnInit(): void {\r\n\t\tthis._renderer.setElementClass(this._ngEl.nativeElement, 'widget-container', true);\r\n\t\tif (this.autoStyle) {\r\n\t\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'position', 'relative');\r\n\t\t}\r\n\t\tthis.setConfig(this._config);\r\n\t}\r\n\r\n\tpublic ngOnDestroy(): void {\r\n\t\tthis._destroyed = true;\r\n\t}\r\n\r\n\tpublic getConfig(): INgWidgetContainerConfig {\r\n\t\treturn this._config;\r\n\t}\r\n\r\n\tpublic setConfig(config: INgWidgetContainerConfig): void {\r\n\t\tthis._config = config;\r\n\r\n\t\tlet maxColRowChanged = false;\r\n\t\tfor (const x in config) {\r\n\t\t\tif (config.hasOwnProperty(x)) {\r\n\t\t\tconst val = config[x];\r\n\t\t\tconst intVal = !val ? 0 : parseInt(val, 10);\r\n\r\n\t\t\t\tswitch (x) {\r\n\t\t\t\t\tcase 'margins':\r\n\t\t\t\t\t\tthis.setMargins(val);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'col_width':\r\n\t\t\t\t\t\tthis.colWidth = Math.max(intVal, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'row_height':\r\n\t\t\t\t\t\tthis.rowHeight = Math.max(intVal, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'auto_style':\r\n\t\t\t\t\t\tthis.autoStyle = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'auto_resize':\r\n\t\t\t\t\t\tthis._autoResize = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'draggable':\r\n\t\t\t\t\t\tthis.dragEnable = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'resizable':\r\n\t\t\t\t\t\tthis.resizeEnable = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'max_rows':\r\n\t\t\t\t\t\tmaxColRowChanged = maxColRowChanged || this._maxRows !== intVal;\r\n\t\t\t\t\t\tthis._maxRows = intVal < 0 ? 0 : intVal;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'max_cols':\r\n\t\t\t\t\t\tmaxColRowChanged = maxColRowChanged || this._maxCols !== intVal;\r\n\t\t\t\t\t\tthis._maxCols = intVal < 0 ? 0 : intVal;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'visible_rows':\r\n\t\t\t\t\t\tthis._visibleRows = Math.max(intVal, 0);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'visible_cols':\r\n\t\t\t\t\t\tthis._visibleCols = Math.max(intVal, 0);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'min_rows':\r\n\t\t\t\t\t\tthis.minRows = Math.max(intVal, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'min_cols':\r\n\t\t\t\t\t\tthis.minCols = Math.max(intVal, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'min_height':\r\n\t\t\t\t\t\tthis.minHeight = Math.max(intVal, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'min_width':\r\n\t\t\t\t\t\tthis.minWidth = Math.max(intVal, 1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'zoom_on_drag':\r\n\t\t\t\t\t\tthis._zoomOnDrag = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cascade':\r\n\t\t\t\t\t\tif (this.cascade !== val) {\r\n\t\t\t\t\t\t\tthis.cascade = val;\r\n\t\t\t\t\t\t\tthis._cascadeGrid();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'fix_to_grid':\r\n\t\t\t\t\t\tthis._fixToGrid = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'maintain_ratio':\r\n\t\t\t\t\t\tthis._maintainRatio = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'prefer_new':\r\n\t\t\t\t\t\tthis._preferNew = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'limit_to_screen':\r\n\t\t\t\t\t\tthis._limitToScreen = !this._autoResize && !!val;\r\n\r\n\t\t\t\t\t\tif (this._limitToScreen) {\r\n\t\t\t\t\t\t\tthis._maxCols = this._getContainerColumns();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'allow_overlap':\r\n\t\t\t\t\t\tthis.allowOverlap = val ? true : false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'widget_width_factor':\r\n\t\t\t\t\t\tthis.widget_width_factor = Math.max(intVal, 0);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'widget_height_factor':\r\n\t\t\t\t\t\tthis.widget_height_factor = Math.max(intVal, 0);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._maintainRatio) {\r\n\t\t\tif (this.colWidth && this.rowHeight) {\r\n\t\t\t\tthis._aspectRatio = this.colWidth / this.rowHeight;\r\n\t\t\t} else {\r\n\t\t\t\tthis._maintainRatio = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (maxColRowChanged) {\r\n\t\t\tif (this._maxCols > 0 && this._maxRows > 0) {\t// \tCan't have both, prioritise on cascade\r\n\t\t\t\tswitch (this.cascade) {\r\n\t\t\t\t\tcase 'left':\r\n\t\t\t\t\tcase 'right':\r\n\t\t\t\t\t\tthis._maxCols = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'up':\r\n\t\t\t\t\tcase 'down':\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._maxRows = 0;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.updatePositionsAfterMaxChange();\r\n\t\t}\r\n\r\n\t\tthis._calculateColWidth();\r\n\t\tthis._calculateRowHeight();\r\n\r\n\t\tconst maxWidth = this._maxCols * this.colWidth;\r\n\t\tconst maxHeight = this._maxRows * this.rowHeight;\r\n\r\n\t\tif (maxWidth > 0 && this.minWidth > maxWidth) this.minWidth = 0.75 * this.colWidth;\r\n\t\tif (maxHeight > 0 && this.minHeight > maxHeight) this.minHeight = 0.75 * this.rowHeight;\r\n\r\n\t\tif (this.minWidth > this.colWidth) this.minCols = Math.max(this.minCols, Math.ceil(this.minWidth / this.colWidth));\r\n\t\tif (this.minHeight > this.rowHeight) this.minRows = Math.max(this.minRows, Math.ceil(this.minHeight / this.rowHeight));\r\n\r\n\t\tif (this._maxCols > 0 && this.minCols > this._maxCols) this.minCols = 1;\r\n\t\tif (this._maxRows > 0 && this.minRows > this._maxRows) this.minRows = 1;\r\n\r\n\t\tthis._updateRatio();\r\n\r\n\t\tfor (const item of this._items) {\r\n\t\t\tthis._removeFromGrid(item);\r\n\t\t\titem.setCascadeMode(this.cascade);\r\n\t\t}\r\n\r\n\t\tfor (const item of this._items) {\r\n\t\t\titem.recalculateSelf();\r\n\t\t\tthis._addToGrid(item);\r\n\t\t}\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._filterGrid();\r\n\t\tthis._updateSize();\r\n\t}\r\n\r\n\tpublic getItemPosition(index: number): INgWidgetPosition {\r\n\t\treturn this._items[index].getWidgetPosition();\r\n\t}\r\n\r\n\tpublic getItemSize(index: number): INgWidgetSize {\r\n\t\treturn this._items[index].getSize();\r\n\t}\r\n\r\n\tpublic ngDoCheck(): boolean {\r\n\t\tif (this._differ != null) {\r\n\t\t\tconst changes = this._differ.diff(this._config);\r\n\r\n\t\t\tif (changes != null) {\r\n\t\t\t\tif(this._config.debug){\r\n\t\t\t\t\tconsole.log('ngDoCheck -> NgWidgetContainer');\r\n\t\t\t\t}\r\n\t\t\t\tthis._applyChanges(changes);\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic setMargins(margins: Array<string>): void {\r\n\t\tthis.marginTop = Math.max(parseInt(margins[0], 10), 0);\r\n\t\tthis.marginRight = margins.length >= 2 ? Math.max(parseInt(margins[1], 10), 0) : this.marginTop;\r\n\t\tthis.marginBottom = margins.length >= 3 ? Math.max(parseInt(margins[2], 10), 0) : this.marginTop;\r\n\t\tthis.marginBottom = margins.length >= 3 ? Math.max(parseInt(margins[2], 10), 0) : this.marginTop;\r\n\t\tthis.marginLeft = margins.length >= 4 ? Math.max(parseInt(margins[3], 10), 0) : this.marginRight;\r\n\t}\r\n\r\n\tpublic enableDrag(): void {\r\n\t\tthis.dragEnable = true;\r\n\t}\r\n\r\n\tpublic disableDrag(): void {\r\n\t\tthis.dragEnable = false;\r\n\t}\r\n\r\n\tpublic enableResize(): void {\r\n\t\tthis.resizeEnable = true;\r\n\t}\r\n\r\n\tpublic disableResize(): void {\r\n\t\tthis.resizeEnable = false;\r\n\t}\r\n\r\n\tpublic addItem(ngItem: NgWidget): void {\r\n\t\tngItem.setCascadeMode(this.cascade);\r\n\r\n\t\tif (!this._preferNew) {\r\n\t\t\tconst newPos = this._fixGridPosition(ngItem.getWidgetPosition(), ngItem.getSize());\r\n\t\t\tngItem.setGridPosition(newPos);\r\n\t\t}\r\n\r\n\t\tthis._items.push(ngItem);\r\n\t\tthis._addToGrid(ngItem);\r\n\r\n\t\tthis._updateSize();\r\n\r\n\t\tngItem.recalculateSelf();\r\n\t\tngItem.onCascadeEvent();\r\n\r\n\t\tthis._emitOnItemChange();\r\n\t}\r\n\r\n\tpublic removeItem(ngItem: NgWidget): void {\r\n\t\tthis._removeFromGrid(ngItem);\r\n\r\n\t\tfor (let x = 0; x < this._items.length; x++) {\r\n\t\t\tif (this._items[x] === ngItem) {\r\n\t\t\t\tthis._items.splice(x, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._destroyed) return;\r\n\t\tif (this.allowOverlap) return;\r\n\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\t\tthis._items.forEach((item: NgWidget) => item.recalculateSelf());\r\n\t\tthis._emitOnItemChange();\r\n\t}\r\n\r\n\tpublic updateItem(ngWidget: NgWidget): void {\r\n\t\tthis._removeFromGrid(ngWidget);\r\n\t\tthis._addToGrid(ngWidget);\r\n\t\tthis._cascadeGrid();\r\n\t\tthis._updateSize();\r\n\t\tngWidget.onCascadeEvent();\r\n\t}\r\n\r\n\tpublic triggerCascade(): void {\r\n\t\tthis._cascadeGrid(null, null);\r\n\t}\r\n\r\n\tpublic triggerResize(): void {\r\n\t\tthis.resizeEventHandler(null);\r\n\t}\r\n\r\n\tpublic resizeEventHandler(e: any): void {\r\n\t\tthis._calculateColWidth();\r\n\t\tthis._calculateRowHeight();\r\n\r\n\t\tthis._updateRatio();\r\n\r\n\t\tif (this._limitToScreen) {\r\n\t\t\tif (this._maxCols !== this._getContainerColumns()) {\r\n\t\t\t\tthis._maxCols = this._getContainerColumns();\r\n\t\t\t\tthis.updatePositionsAfterMaxChange();\r\n\t\t\t\tthis._cascadeGrid();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._filterGrid();\r\n\t\tthis._updateSize();\r\n\t}\r\n\r\n\tpublic mouseDownEventHandler(e: MouseEvent): void {\r\n\t\tconst mousePos = this._getMousePosition(e);\r\n\t\tconst widget = this._getItemFromPosition(mousePos);\r\n\r\n\t\tif (widget != null) {\r\n\t\t\tif (this.resizeEnable && widget.canResize(e)) {\r\n\t\t\t\tthis._resizeReady = true;\r\n\t\t\t\te.preventDefault();\r\n\t\t\t} else if (this.dragEnable && widget.canDrag(e)) {\r\n\t\t\t\tthis._dragReady = true;\r\n\t\t\t\te.preventDefault();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic mouseUpEventHandler(e: any): void {\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis._dragStop(e);\r\n\t\t} else if (this.isResizing) {\r\n\t\t\tthis._resizeStop(e);\r\n\t\t} else if (this._dragReady || this._resizeReady) {\r\n\t\t\tthis._dragReady = false;\r\n\t\t\tthis._resizeReady = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic mouseMoveEventHandler(e: any): void {\r\n\t\tif (this._resizeReady) {\r\n\t\t\tthis._resizeStart(e);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t} else if (this._dragReady) {\r\n\t\t\tthis._dragStart(e);\r\n\t\t\te.preventDefault();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis._drag(e);\r\n\t\t} else if (this.isResizing) {\r\n\t\t\tthis._resize(e);\r\n\t\t} else {\r\n\t\t\tconst mousePos = this._getMousePosition(e);\r\n\t\t\tconst item = this._getItemFromPosition(mousePos);\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\titem.onMouseMove(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// \tPrivate methods\r\n\tprivate updatePositionsAfterMaxChange(): void {\r\n\t\tfor (const item of this._items) {\r\n\t\t\tconst pos = item.getWidgetPosition();\r\n\t\t\tconst dims = item.getSize();\r\n\r\n\t\t\tif (!this._hasGridCollision(pos, dims) && this._isWithinBounds(pos, dims) && dims.x <= this._maxCols && dims.y <= this._maxRows) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\tif (this._maxCols > 0 && dims.x > this._maxCols) {\r\n\t\t\t\tdims.x = this._maxCols;\r\n\t\t\t\titem.setSize(dims);\r\n\t\t\t} else if (this._maxRows > 0 && dims.y > this._maxRows) {\r\n\t\t\t\tdims.y = this._maxRows;\r\n\t\t\t\titem.setSize(dims);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._hasGridCollision(pos, dims) || !this._isWithinBounds(pos, dims)) {\r\n\t\t\t\tconst newPosition = this._fixGridPosition(pos, dims);\r\n\t\t\t\titem.setGridPosition(newPosition);\r\n\t\t\t}\r\n\r\n\t\t\tthis._addToGrid(item);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calculateColWidth(): void {\r\n\t\tif (this._autoResize) {\r\n\t\t\tif (this._maxCols > 0 || this._visibleCols > 0) {\r\n\t\t\t\tconst maxCols = this._maxCols > 0 ? this._maxCols : this._visibleCols;\r\n\t\t\t\tconst maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\r\n\t\t\t\tlet colWidth: number = Math.floor(maxWidth / maxCols);\r\n\t\t\t\tcolWidth -= (this.marginLeft + this.marginRight);\r\n\t\t\t\tif (colWidth > 0) this.colWidth = colWidth;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.colWidth < this.minWidth || this.minCols > this._config.min_cols) {\r\n\t\t\tthis.minCols = Math.max(this._config.min_cols, Math.ceil(this.minWidth / this.colWidth));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _calculateRowHeight(): void {\r\n\t\tif (this._autoResize) {\r\n\t\t\tif (this._maxRows > 0 || this._visibleRows > 0) {\r\n\t\t\t\tconst maxRows = this._maxRows > 0 ? this._maxRows : this._visibleRows;\r\n\t\t\t\tconst maxHeight: number = window.innerHeight - this.marginTop - this.marginBottom;\r\n\r\n\t\t\t\tlet rowHeight: number = Math.max(Math.floor(maxHeight / maxRows), this.minHeight);\r\n\t\t\t\trowHeight -= (this.marginTop + this.marginBottom);\r\n\t\t\t\tif (rowHeight > 0) this.rowHeight = rowHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.rowHeight < this.minHeight || this.minRows > this._config.min_rows) {\r\n\t\t\tthis.minRows = Math.max(this._config.min_rows, Math.ceil(this.minHeight / this.rowHeight));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateRatio(): void {\r\n\t\tif (this._autoResize && this._maintainRatio) {\r\n\t\t\tif (this._maxCols > 0 && this._visibleRows <= 0) {\r\n\t\t\t\tthis.rowHeight = this.colWidth / this._aspectRatio;\r\n\t\t\t} else if (this._maxRows > 0 && this._visibleCols <= 0) {\r\n\t\t\t\tthis.colWidth = this._aspectRatio * this.rowHeight;\r\n\t\t\t} else if (this._maxCols === 0 && this._maxRows === 0) {\r\n\t\t\t\tif (this._visibleCols > 0) {\r\n\t\t\t\t\tthis.rowHeight = this.colWidth / this._aspectRatio;\r\n\t\t\t\t} else if (this._visibleRows > 0) {\r\n\t\t\t\t\tthis.colWidth = this._aspectRatio * this.rowHeight;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _applyChanges(changes: any): void {\r\n\t\tchanges.forEachAddedItem((record: any) => { this._config[record.key] = record.currentValue; });\r\n\t\tchanges.forEachChangedItem((record: any) => { this._config[record.key] = record.currentValue; });\r\n\t\tchanges.forEachRemovedItem((record: any) => { delete this._config[record.key]; });\r\n\r\n\t\tthis.setConfig(this._config);\r\n\t}\r\n\r\n\tprivate _resizeStart(e: any): void {\r\n\t\tif (this.resizeEnable) {\r\n\t\t\tconst mousePos = this._getMousePosition(e);\r\n\t\t\tconst item = this._getItemFromPosition(mousePos);\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\titem.startMoving();\r\n\t\t\t\tthis._resizingItem = item;\r\n\t\t\t\tthis._resizeDirection = item.canResize(e);\r\n\t\t\t\tthis._removeFromGrid(item);\r\n\t\t\t\tthis._createPlaceholder(item);\r\n\t\t\t\tthis.isResizing = true;\r\n\t\t\t\tthis._resizeReady = false;\r\n\t\t\t\tthis.onResizeStart.emit(item);\r\n\t\t\t\titem.onResizeStartEvent();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragStart(e: any): void {\r\n\t\tif (this.dragEnable) {\r\n\t\t\tconst mousePos = this._getMousePosition(e);\r\n\t\t\tconst item = this._getItemFromPosition(mousePos);\r\n\r\n\t\t\tif (item) {\r\n\t\t\t\tconst itemPos = item.getPosition();\r\n\t\t\t\tconst pOffset = { 'left': (mousePos.left - itemPos.left), 'top': (mousePos.top - itemPos.top) };\r\n\t\t\t\titem.setWidgetDragStartPosition(item.getWidgetPosition());\r\n\t\t\t\tif(this._config.debug){\r\n\t\t\t\t\tconsole.log('_dragStart -> dragStartPosition', item.getWidgetDragStartPosition());\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\titem.startMoving();\r\n\t\t\t\tthis._draggingItem = item;\r\n\t\t\t\tthis._posOffset = pOffset;\r\n\t\t\t\tthis._removeFromGrid(item);\r\n\t\t\t\tthis._createPlaceholder(item);\r\n\t\t\t\tthis.isDragging = true;\r\n\t\t\t\tthis._dragReady = false;\r\n\r\n\t\t\t\tthis.onDragStart.emit(item);\r\n\t\t\t\titem.onDragStartEvent();\r\n\r\n\t\t\t\tif (this._zoomOnDrag) {\r\n\t\t\t\t\tthis._zoomOut();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _zoomOut(): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', 'scale(0.5, 0.5)');\r\n\t}\r\n\r\n\tprivate _resetZoom(): void {\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'transform', '');\r\n\t}\r\n\r\n\tprivate _drag(e: any): void {\r\n\t\tif (this.isDragging) {\r\n\t\t\tif(this._config.debug){\r\n\t\t\t\tconsole.log('_drag');\r\n\t\t\t}\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\t\twindow.getSelection().empty();\r\n\t\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} else if ((<any>document).selection) {\r\n\t\t\t\t(<any>document).selection.empty();\r\n\t\t\t}\r\n\r\n\t\t\tconst mousePos = this._getMousePosition(e);\r\n\t\t\tconst newL = (mousePos.left - this._posOffset.left);\r\n\t\t\tconst newT = (mousePos.top - this._posOffset.top);\r\n\r\n\t\t\tconst itemPos = this._draggingItem.getWidgetPosition();\r\n\t\t\tlet gridPos = this._calculateGridPosition(newL, newT);\r\n\t\t\tconst dims = this._draggingItem.getSize();\r\n\r\n\t\t\tgridPos = this._fixPosToBoundsX(gridPos, dims);\r\n\r\n\t\t\tif (!this._isWithinBoundsY(gridPos, dims)) {\r\n\t\t\t\tgridPos = this._fixPosToBoundsY(gridPos, dims);\r\n\t\t\t}\r\n\r\n\t\t\tif (gridPos.col !== itemPos.col || gridPos.row !== itemPos.row) {\r\n\t\t\t// if (Math.abs(gridPos.col - itemPos.col) > 10 || Math.abs(gridPos.row - itemPos.row) > 10) {\r\n\t\t\t\tif(this._config.debug) {\r\n\t\t\t\t\tconsole.log('_drag', gridPos, itemPos);\r\n\t\t\t\t}\r\n\t\t\t\tthis._draggingItem.setGridPosition(gridPos, this._fixToGrid);\r\n\t\t\t\tthis._placeholderRef.instance.setGridPosition(gridPos);\r\n\r\n\t\t\t\tif (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\r\n\t\t\t\t\tif (Math.abs(gridPos.col - itemPos.col) > 10 || Math.abs(gridPos.row - itemPos.row) > 10) {\r\n\t\t\t\t\t\tif(this._config.debug) {\r\n\t\t\t\t\t\t\tconsole.log('_drag fixGridCollision', gridPos, dims);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._fixGridCollisions(gridPos, dims);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(this._config.debug) {\r\n\t\t\t\t\t\tconsole.log('_drag cascade', gridPos, dims);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._cascadeGrid(gridPos, dims);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._fixToGrid) {\r\n\t\t\t\tthis._draggingItem.setPosition(newL, newT);\r\n\t\t\t}\r\n\r\n\t\t\tthis.onDrag.emit(this._draggingItem);\r\n\t\t\tthis._draggingItem.onDragEvent();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resize(e: any): void {\r\n\t\tif (this.isResizing) {\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tif (window.getSelection().empty) {\r\n\t\t\t\t\twindow.getSelection().empty();\r\n\t\t\t\t} else if (window.getSelection().removeAllRanges) {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} else if ((<any>document).selection) {\r\n\t\t\t\t(<any>document).selection.empty();\r\n\t\t\t}\r\n\r\n\t\t\tconst mousePos = this._getMousePosition(e);\r\n\t\t\tconst itemPos = this._resizingItem.getPosition();\r\n\t\t\tconst itemDims = this._resizingItem.getDimensions();\r\n\t\t\tlet newW = this._resizeDirection === 'height' ? itemDims.width : (mousePos.left - itemPos.left + 10);\r\n\t\t\tlet newH = this._resizeDirection === 'width' ? itemDims.height : (mousePos.top - itemPos.top + 10);\r\n\r\n\t\t\tif (newW < this.minWidth) newW = this.minWidth;\r\n\t\t\tif (newH < this.minHeight) newH = this.minHeight;\r\n\t\t\tif (newW < this._resizingItem.minWidth) newW = this._resizingItem.minWidth;\r\n\t\t\tif (newH < this._resizingItem.minHeight) newH = this._resizingItem.minHeight;\r\n\r\n\t\t\tlet calcSize = this._calculateGridSize(newW, newH);\r\n\t\t\tconst itemSize = this._resizingItem.getSize();\r\n\t\t\tconst iGridPos = this._resizingItem.getWidgetPosition();\r\n\r\n\t\t\tif (!this._isWithinBoundsX(iGridPos, calcSize)) calcSize = this._fixSizeToBoundsX(iGridPos, calcSize);\r\n\r\n\t\t\tif (!this._isWithinBoundsY(iGridPos, calcSize)) calcSize = this._fixSizeToBoundsY(iGridPos, calcSize);\r\n\r\n\t\t\tcalcSize = this._resizingItem.fixResize(calcSize);\r\n\r\n\t\t\tif (calcSize.x !== itemSize.x || calcSize.y !== itemSize.y) {\r\n\t\t\t\tthis._resizingItem.setSize(calcSize, this._fixToGrid);\r\n\t\t\t\tthis._placeholderRef.instance.setSize(calcSize);\r\n\r\n\t\t\t\tif (['up', 'down', 'left', 'right'].indexOf(this.cascade) >= 0) {\r\n\t\t\t\t\tthis._fixGridCollisions(iGridPos, calcSize);\r\n\t\t\t\t\tthis._cascadeGrid(iGridPos, calcSize);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._fixToGrid) this._resizingItem.setDimensions(newW, newH);\r\n\r\n\t\t\tconst bigGrid = this._maxGridSize(itemPos.left + newW + (2 * e.movementX), itemPos.top + newH + (2 * e.movementY));\r\n\r\n\t\t\tif (this._resizeDirection === 'height') bigGrid.x = iGridPos.col + itemSize.x;\r\n\t\t\tif (this._resizeDirection === 'width') bigGrid.y = iGridPos.row + itemSize.y;\r\n\r\n\t\t\tthis.onResize.emit(this._resizingItem);\r\n\t\t\tthis._resizingItem.onResizeEvent();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragStop(e: any): void {\r\n\t\tif (this.isDragging) {\r\n\t\t\tthis.isDragging = false;\r\n\r\n\t\t\tconst itemPos = this._draggingItem.getWidgetPosition();\r\n\t\t\tconst itemDragStartPos = this._draggingItem.getWidgetDragStartPosition();\r\n\t\t\tif(this._config.debug) {\r\n\t\t\t\tconsole.log('_dragStop itemPos, dragStartPos', itemPos, itemDragStartPos);\r\n\t\t\t}\r\n\t\t\tthis._draggingItem.setGridPosition(itemPos);\r\n\t\t\t// if (this.allowOverlap) {\r\n\t\t\t// \tthis._draggingItem.setGridPosition(itemPos);\r\n\t\t\t// } else {\r\n\t\t\t// \tif (Math.abs(itemPos.row - itemDragStartPos.row) > 4 ) {\r\n\t\t\t// \t\tconsole.log('_dragStop setGrid itemPos');\r\n\t\t\t// \t\tthis._draggingItem.setGridPosition(itemPos);\r\n\t\t\t// \t} else {\r\n\t\t\t// \t\tconsole.log('_dragStop setGrid itemDragStartPos');\r\n\t\t\t// \t\tconst newPos: INgWidgetPosition = { col: itemPos.col, row: itemDragStartPos.row };\r\n\t\t\t// \t\tthis._draggingItem.setGridPosition(newPos);\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\t\tthis._addToGrid(this._draggingItem);\r\n\r\n\t\t\tthis._cascadeGrid();\r\n\t\t\tthis._updateSize();\r\n\t\t\tthis._filterGrid();\r\n\r\n\t\t\tthis._draggingItem.stopMoving();\r\n\t\t\tthis._draggingItem.onDragStopEvent();\r\n\t\t\tthis.onDragStop.emit(this._draggingItem);\r\n\t\t\tthis._draggingItem = null;\r\n\t\t\tthis._posOffset = null;\r\n\t\t\tthis._placeholderRef.destroy();\r\n\r\n\t\t\tthis._emitOnItemChange();\r\n\r\n\t\t\tif (this._zoomOnDrag) {\r\n\t\t\t\tthis._resetZoom();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resizeStop(e: any): void {\r\n\t\tif (this.isResizing) {\r\n\t\t\tthis.isResizing = false;\r\n\r\n\t\t\tconst itemDims = this._resizingItem.getSize();\r\n\r\n\t\t\tthis._resizingItem.setSize(itemDims);\r\n\t\t\tthis._addToGrid(this._resizingItem);\r\n\r\n\t\t\tthis._cascadeGrid();\r\n\t\t\tthis._updateSize();\r\n\t\t\tthis._filterGrid();\r\n\r\n\t\t\tthis._resizingItem.stopMoving();\r\n\t\t\tthis._resizingItem.onResizeStopEvent();\r\n\t\t\tthis.onResizeStop.emit(this._resizingItem);\r\n\t\t\tthis._resizingItem = null;\r\n\t\t\tthis._resizeDirection = null;\r\n\t\t\tthis._placeholderRef.destroy();\r\n\r\n\t\t\tthis._emitOnItemChange();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _maxGridSize(w: number, h: number): INgWidgetSize {\r\n\t\tconst sizex = Math.ceil(w / (this.colWidth + this.marginLeft + this.marginRight));\r\n\t\tconst sizey = Math.ceil(h / (this.rowHeight + this.marginTop + this.marginBottom));\r\n\t\treturn { 'x': sizex, 'y': sizey };\r\n\t}\r\n\r\n\tprivate _calculateGridSize(width: number, height: number): INgWidgetSize {\r\n\t\twidth += this.marginLeft + this.marginRight;\r\n\t\theight += this.marginTop + this.marginBottom;\r\n\r\n\t\tlet sizex = Math.max(this.minCols, Math.round(width / (this.colWidth + this.marginLeft + this.marginRight)));\r\n\t\tlet sizey = Math.max(this.minRows, Math.round(height / (this.rowHeight + this.marginTop + this.marginBottom)));\r\n\r\n\t\tif (!this._isWithinBoundsX({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizex = this._maxCols;\r\n\t\tif (!this._isWithinBoundsY({ col: 1, row: 1 }, { x: sizex, y: sizey })) sizey = this._maxRows;\r\n\r\n\t\treturn { 'x': sizex, 'y': sizey };\r\n\t}\r\n\r\n\tprivate _calculateGridPosition(left: number, top: number): INgWidgetPosition {\r\n\t\tlet col = Math.max(1, Math.round(left / (this.colWidth + this.marginLeft + this.marginRight)) + 1);\r\n\t\tlet row = Math.max(1, Math.round(top / (this.rowHeight + this.marginTop + this.marginBottom)) + 1);\r\n\r\n\t\tif (!this._isWithinBoundsX({ col: col, row: row }, { x: 1, y: 1 })) col = this._maxCols;\r\n\t\tif (!this._isWithinBoundsY({ col: col, row: row }, { x: 1, y: 1 })) row = this._maxRows;\r\n\r\n\t\treturn { 'col': col, 'row': row };\r\n\t}\r\n\r\n\tprivate _hasGridCollision(pos: INgWidgetPosition, dims: INgWidgetSize): boolean {\r\n\t\tconst positions = this._getCollisions(pos, dims);\r\n\r\n\t\tif (positions == null || positions.length === 0) return false;\r\n\r\n\t\treturn positions.some((v: NgWidget) => {\r\n\t\t\treturn !(v === null);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _getCollisions(pos: INgWidgetPosition, dims: INgWidgetSize): Array<NgWidget> {\r\n\t\tconst returns: Array<NgWidget> = [];\r\n\r\n\t\tif(!pos.col) {\r\n\t\t\tpos.col = 1;\r\n\t\t}\r\n\t\tif(!pos.row) {\r\n\t\t\tpos.row = 1;\r\n\t\t}\r\n\r\n\t\tfor (let j = 0; j < dims.y; j++) {\r\n\t\t\tif (this._itemGrid[pos.row + j] != null) {\r\n\t\t\t\tfor (let i = 0; i < dims.x; i++) {\r\n\t\t\t\t\tif (this._itemGrid[pos.row + j][pos.col + i] != null) {\r\n\t\t\t\t\t\tconst item: NgWidget = this._itemGrid[pos.row + j][pos.col + i];\r\n\r\n\t\t\t\t\t\tif (returns.indexOf(item) < 0) returns.push(item);\r\n\r\n\t\t\t\t\t\tconst itemPos: INgWidgetPosition = item.getWidgetPosition();\r\n\t\t\t\t\t\tconst itemDims: INgWidgetSize = item.getSize();\r\n\r\n\t\t\t\t\t\ti = itemPos.col + itemDims.x - pos.col;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn returns;\r\n\t}\r\n\r\n\tprivate _fixGridCollisions(pos: INgWidgetPosition, dims: INgWidgetSize): void {\r\n\t\tif (this.allowOverlap)  return;\r\n\r\n\t\twhile (this._hasGridCollision(pos, dims)) {\r\n\t\t\tconst collisions: Array<NgWidget> = this._getCollisions(pos, dims);\r\n\r\n\t\t\tthis._removeFromGrid(collisions[0]);\r\n\r\n\t\t\tconst itemPos: INgWidgetPosition = collisions[0].getWidgetPosition();\r\n\t\t\tconst itemDims: INgWidgetSize = collisions[0].getSize();\r\n\r\n\t\t\tswitch (this.cascade) {\r\n\t\t\t\tcase 'up':\r\n\t\t\t\tcase 'down':\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconst oldRow: number = itemPos.row;\r\n\t\t\t\t\titemPos.row = pos.row + dims.y;\r\n\r\n\t\t\t\t\tif (!this._isWithinBoundsY(itemPos, itemDims)) {\r\n\t\t\t\t\t\titemPos.col = pos.col + dims.x;\r\n\t\t\t\t\t\titemPos.row = oldRow;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'left':\r\n\t\t\t\tcase 'right':\r\n\t\t\t\t\tconst oldCol: number = itemPos.col;\r\n\t\t\t\t\titemPos.col = pos.col + dims.x;\r\n\r\n\t\t\t\t\tif (!this._isWithinBoundsX(itemPos, itemDims)) {\r\n\t\t\t\t\t\titemPos.col = oldCol;\r\n\t\t\t\t\t\titemPos.row = pos.row + dims.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tcollisions[0].setGridPosition(itemPos);\r\n\r\n\t\t\tthis._fixGridCollisions(itemPos, itemDims);\r\n\t\t\tthis._addToGrid(collisions[0]);\r\n\t\t\tcollisions[0].onCascadeEvent();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _cascadeGrid(pos?: INgWidgetPosition, dims?: INgWidgetSize): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tif (this.allowOverlap) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pos && !dims) throw new Error('Cannot cascade with only position and not dimensions');\r\n\r\n\t\tif (this.isDragging && this._draggingItem && !pos && !dims) {\r\n\t\t\tpos = this._draggingItem.getWidgetPosition();\r\n\t\t\tdims = this._draggingItem.getSize();\r\n\t\t} else if (this.isResizing && this._resizingItem && !pos && !dims) {\r\n\t\t\tpos = this._resizingItem.getWidgetPosition();\r\n\t\t\tdims = this._resizingItem.getSize();\r\n\t\t}\r\n\r\n\t\tswitch (this.cascade) {\r\n\t\t\tcase 'up':\r\n\t\t\tcase 'down':\r\n\t\t\t\tconst lowRow: Array<number> = [0];\r\n\r\n\t\t\t\tfor (let i = 1; i <= this._curMaxCol; i++) lowRow[i] = 1;\r\n\r\n\t\t\t\tfor (let r = 1; r <= this._curMaxRow; r++) {\r\n\t\t\t\t\tif (this._itemGrid[r] === undefined) continue;\r\n\r\n\t\t\t\t\tfor (let c = 1; c <= this._curMaxCol; c++) {\r\n\t\t\t\t\t\tif (this._itemGrid[r] === undefined) break;\r\n\t\t\t\t\t\tif (r < lowRow[c]) continue;\r\n\r\n\t\t\t\t\t\tif (this._itemGrid[r][c] != null) {\r\n\t\t\t\t\t\t\tconst item: NgWidget = this._itemGrid[r][c];\r\n\t\t\t\t\t\t\tif (item.isFixed) continue;\r\n\r\n\t\t\t\t\t\t\tconst itemPos: INgWidgetPosition = item.getWidgetPosition();\r\n\t\t\t\t\t\t\tconst itemDims: INgWidgetSize = item.getSize();\r\n\r\n\t\t\t\t\t\t\tif (itemPos.col !== c || itemPos.row !== r) continue;\t// \tif this is not the element's start\r\n\r\n\t\t\t\t\t\t\tlet lowest: number = lowRow[c];\r\n\r\n\t\t\t\t\t\t\tfor (let i = 1; i < itemDims.x; i++) {\r\n\t\t\t\t\t\t\t\tlowest = Math.max(lowRow[(c + i)], lowest);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (pos && (c + itemDims.x) > pos.col && c < (pos.col + dims.x)) {          // \tif our element is in one of the item's columns\r\n\t\t\t\t\t\t\t\tif ((r >= pos.row && r < (pos.row + dims.y)) ||                         // \tif this row is occupied by our element\r\n\t\t\t\t\t\t\t\t\t((itemDims.y > (pos.row - lowest)) &&                               // \tor the item can't fit above our element\r\n\t\t\t\t\t\t\t\t\t\t(r >= (pos.row + dims.y) && lowest < (pos.row + dims.y)))) {    // \tand this row is below our element, but we haven't caught it\r\n\t\t\t\t\t\t\t\t\tlowest = Math.round(Math.max(lowest, pos.row + dims.y));                        // \tset the lowest row to be below it\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst newPos: INgWidgetPosition = { col: c, row: lowest };\r\n\r\n\t\t\t\t\t\t\tif (lowest !== itemPos.row && this._isWithinBoundsY(newPos, itemDims)) {\t// \tif the item is not already on this row move it up\r\n\t\t\t\t\t\t\t\tthis._removeFromGrid(item);\r\n\r\n\t\t\t\t\t\t\t\titem.setGridPosition(newPos);\r\n\r\n\t\t\t\t\t\t\t\titem.onCascadeEvent();\r\n\t\t\t\t\t\t\t\tthis._addToGrid(item);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < itemDims.x; i++) {\r\n\t\t\t\t\t\t\t\tlowRow[c + i] = lowest + itemDims.y;\t// \tupdate the lowest row to be below the item\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\tcase 'right':\r\n\t\t\t\tconst lowCol: Array<number> = [0];\r\n\r\n\t\t\t\tfor (let i = 1; i <= this._curMaxRow; i++) lowCol[i] = 1;\r\n\r\n\t\t\t\tfor (let r = 1; r <= this._curMaxRow; r++) {\r\n\t\t\t\t\tif (this._itemGrid[r] === undefined) continue;\r\n\r\n\t\t\t\t\tfor (let c = 1; c <= this._curMaxCol; c++) {\r\n\t\t\t\t\t\tif (this._itemGrid[r] === undefined) break;\r\n\t\t\t\t\t\tif (c < lowCol[r]) continue;\r\n\r\n\t\t\t\t\t\tif (this._itemGrid[r][c] != null) {\r\n\t\t\t\t\t\t\tconst item: NgWidget = this._itemGrid[r][c];\r\n\t\t\t\t\t\t\tconst itemDims: INgWidgetSize = item.getSize();\r\n\t\t\t\t\t\t\tconst itemPos: INgWidgetPosition = item.getWidgetPosition();\r\n\r\n\t\t\t\t\t\t\tif (itemPos.col !== c || itemPos.row !== r) continue;\t// \tif this is not the element's start\r\n\r\n\t\t\t\t\t\t\tlet lowest: number = lowCol[r];\r\n\r\n\t\t\t\t\t\t\tfor (let i = 1; i < itemDims.y; i++) {\r\n\t\t\t\t\t\t\t\tlowest = Math.max(lowCol[(r + i)], lowest);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (pos && (r + itemDims.y) > pos.row && r < (pos.row + dims.y)) {          // \tif our element is in one of the item's rows\r\n\t\t\t\t\t\t\t\tif ((c >= pos.col && c < (pos.col + dims.x)) ||                         // \tif this col is occupied by our element\r\n\t\t\t\t\t\t\t\t\t((itemDims.x > (pos.col - lowest)) &&                               // \tor the item can't fit above our element\r\n\t\t\t\t\t\t\t\t\t\t(c >= (pos.col + dims.x) && lowest < (pos.col + dims.x)))) {    // \tand this col is below our element, but we haven't caught it\r\n\t\t\t\t\t\t\t\t\tlowest = Math.max(lowest, pos.col + dims.x);                        // \tset the lowest col to be below it\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst newPos: INgWidgetPosition = { col: Math.round(lowest), row: r };\r\n\r\n\t\t\t\t\t\t\t// if (lowest !== itemPos.col && this._isWithinBoundsX(newPos, itemDims)) {\t// \tif the item is not already on this col move it up\r\n\t\t\t\t\t\t\tif (lowest !== itemPos.col && lowest < itemPos.col && this._isWithinBoundsX(newPos, itemDims)) {\t// \tif the item is not already on this col move it up\r\n\t\t\t\t\t\t\t\tthis._removeFromGrid(item);\r\n\t\t\t\t\t\t\t\tif(this._config.debug) {\r\n\t\t\t\t\t\t\t\t\tconsole.log('_cascadeGrid called setGridPosition', this.cascade, lowest, itemPos, newPos, itemDims);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\titem.setGridPosition(newPos);\r\n\r\n\t\t\t\t\t\t\t\titem.onCascadeEvent();\r\n\t\t\t\t\t\t\t\tthis._addToGrid(item);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < itemDims.y; i++) {\r\n\t\t\t\t\t\t\t\tlowCol[r + i] = lowest + itemDims.x;\t// \tupdate the lowest col to be below the item\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _cascadePlaceHolder(pos?: INgWidgetPosition, dims?: INgWidgetSize): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tif (this.allowOverlap) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (pos && !dims) throw new Error('Cannot cascade with only position and not dimensions');\r\n\r\n\t\tif (this.isDragging && this._draggingItem && !pos && !dims) {\r\n\t\t\tpos = this._draggingItem.getWidgetPosition();\r\n\t\t\tdims = this._draggingItem.getSize();\r\n\t\t} else if (this.isResizing && this._resizingItem && !pos && !dims) {\r\n\t\t\tpos = this._resizingItem.getWidgetPosition();\r\n\t\t\tdims = this._resizingItem.getSize();\r\n\t\t}\r\n\r\n\t\tswitch (this.cascade) {\r\n\t\t\tcase 'up':\r\n\t\t\tcase 'down':\r\n\t\t\t\tconst lowRow: Array<number> = [0];\r\n\r\n\t\t\t\tfor (let i = 1; i <= this._curMaxCol; i++) lowRow[i] = 1;\r\n\r\n\t\t\t\tfor (let r = 1; r <= this._curMaxRow; r++) {\r\n\t\t\t\t\tif (this._itemGrid[r] === undefined) continue;\r\n\r\n\t\t\t\t\tfor (let c = 1; c <= this._curMaxCol; c++) {\r\n\t\t\t\t\t\tif (this._itemGrid[r] === undefined) break;\r\n\t\t\t\t\t\tif (r < lowRow[c]) continue;\r\n\r\n\t\t\t\t\t\tif (this._itemGrid[r][c] != null) {\r\n\t\t\t\t\t\t\tconst item: NgWidget = this._itemGrid[r][c];\r\n\t\t\t\t\t\t\tif (item.isFixed) continue;\r\n\r\n\t\t\t\t\t\t\tconst itemPos: INgWidgetPosition = item.getWidgetPosition();\r\n\t\t\t\t\t\t\tconst itemDims: INgWidgetSize = item.getSize();\r\n\r\n\t\t\t\t\t\t\tif (itemPos.col !== c || itemPos.row !== r) continue;\t// \tif this is not the element's start\r\n\r\n\t\t\t\t\t\t\tlet lowest: number = lowRow[c];\r\n\r\n\t\t\t\t\t\t\tfor (let i = 1; i < itemDims.x; i++) {\r\n\t\t\t\t\t\t\t\tlowest = Math.max(lowRow[(c + i)], lowest);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (pos && (c + itemDims.x) > pos.col && c < (pos.col + dims.x)) {          // \tif our element is in one of the item's columns\r\n\t\t\t\t\t\t\t\tif ((r >= pos.row && r < (pos.row + dims.y)) ||                         // \tif this row is occupied by our element\r\n\t\t\t\t\t\t\t\t\t((itemDims.y > (pos.row - lowest)) &&                               // \tor the item can't fit above our element\r\n\t\t\t\t\t\t\t\t\t\t(r >= (pos.row + dims.y) && lowest < (pos.row + dims.y)))) {    // \tand this row is below our element, but we haven't caught it\r\n\t\t\t\t\t\t\t\t\tlowest = Math.max(lowest, pos.row + dims.y);                        // \tset the lowest row to be below it\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst newPos: INgWidgetPosition = { col: c, row: lowest };\r\n\r\n\t\t\t\t\t\t\tif (lowest !== itemPos.row && this._isWithinBoundsY(newPos, itemDims)) {\t// \tif the item is not already on this row move it up\r\n\t\t\t\t\t\t\t\t// this._removeFromGrid(item);\r\n\r\n\t\t\t\t\t\t\t\t// item.setGridPosition(newPos);\r\n\r\n\t\t\t\t\t\t\t\t// item.onCascadeEvent();\r\n\t\t\t\t\t\t\t\t// this._addToGrid(item);\r\n\t\t\t\t\t\t\t\tthis._placeholderRef.instance.setGridPosition(newPos);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < itemDims.x; i++) {\r\n\t\t\t\t\t\t\t\tlowRow[c + i] = lowest + itemDims.y;\t// \tupdate the lowest row to be below the item\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'left':\r\n\t\t\tcase 'right':\r\n\t\t\t\tconst lowCol: Array<number> = [0];\r\n\r\n\t\t\t\tfor (let i = 1; i <= this._curMaxRow; i++) lowCol[i] = 1;\r\n\r\n\t\t\t\tfor (let r = 1; r <= this._curMaxRow; r++) {\r\n\t\t\t\t\tif (this._itemGrid[r] === undefined) continue;\r\n\r\n\t\t\t\t\tfor (let c = 1; c <= this._curMaxCol; c++) {\r\n\t\t\t\t\t\tif (this._itemGrid[r] === undefined) break;\r\n\t\t\t\t\t\tif (c < lowCol[r]) continue;\r\n\r\n\t\t\t\t\t\tif (this._itemGrid[r][c] != null) {\r\n\t\t\t\t\t\t\tconst item: NgWidget = this._itemGrid[r][c];\r\n\t\t\t\t\t\t\tconst itemDims: INgWidgetSize = item.getSize();\r\n\t\t\t\t\t\t\tconst itemPos: INgWidgetPosition = item.getWidgetPosition();\r\n\r\n\t\t\t\t\t\t\tif (itemPos.col !== c || itemPos.row !== r) continue;\t// \tif this is not the element's start\r\n\r\n\t\t\t\t\t\t\tlet lowest: number = lowCol[r];\r\n\r\n\t\t\t\t\t\t\tfor (let i = 1; i < itemDims.y; i++) {\r\n\t\t\t\t\t\t\t\tlowest = Math.max(lowCol[(r + i)], lowest);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (pos && (r + itemDims.y) > pos.row && r < (pos.row + dims.y)) {          // \tif our element is in one of the item's rows\r\n\t\t\t\t\t\t\t\tif ((c >= pos.col && c < (pos.col + dims.x)) ||                         // \tif this col is occupied by our element\r\n\t\t\t\t\t\t\t\t\t((itemDims.x > (pos.col - lowest)) &&                               // \tor the item can't fit above our element\r\n\t\t\t\t\t\t\t\t\t\t(c >= (pos.col + dims.x) && lowest < (pos.col + dims.x)))) {    // \tand this col is below our element, but we haven't caught it\r\n\t\t\t\t\t\t\t\t\tlowest = Math.max(lowest, pos.col + dims.x);                        // \tset the lowest col to be below it\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst newPos: INgWidgetPosition = { col: lowest, row: r };\r\n\r\n\t\t\t\t\t\t\tif (lowest !== itemPos.col && lowest < itemPos.col && this._isWithinBoundsX(newPos, itemDims)) {\t// \tif the item is not already on this col move it up\r\n\t\t\t\t\t\t\t\t// this._removeFromGrid(item);\r\n\t\t\t\t\t\t\t\t// console.log('_cascadeGrid called setGridPosition', this.cascade, lowest, itemPos, newPos, itemDims);\r\n\r\n\t\t\t\t\t\t\t\t// item.setGridPosition(newPos);\r\n\r\n\t\t\t\t\t\t\t\t// item.onCascadeEvent();\r\n\t\t\t\t\t\t\t\t// this._addToGrid(item);\r\n\t\t\t\t\t\t\t\tthis._placeholderRef.instance.setGridPosition(newPos);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < itemDims.y; i++) {\r\n\t\t\t\t\t\t\t\tlowCol[r + i] = lowest + itemDims.x;\t// \tupdate the lowest col to be below the item\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _fixGridPosition(pos: INgWidgetPosition, dims: INgWidgetSize): INgWidgetPosition {\r\n\t\twhile (this._hasGridCollision(pos, dims) || !this._isWithinBounds(pos, dims)) {\r\n\t\t\tif (this._hasGridCollision(pos, dims)) {\r\n\t\t\t\tconst collisions: NgWidget[] = this._getCollisions(pos, dims);\r\n\r\n\t\t\t\tswitch (this.cascade) {\r\n\t\t\t\t\tcase 'up':\r\n\t\t\t\t\tcase 'down':\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tpos.row = Math.max.apply(null, collisions.map((item: NgWidget) => item.row + item.sizey));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'left':\r\n\t\t\t\t\tcase 'right':\r\n\t\t\t\t\t\tpos.col = Math.max.apply(null, collisions.map((item: NgWidget) => item.col + item.sizex));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (!this._isWithinBoundsY(pos, dims)) {\r\n\t\t\t\tpos.col++;\r\n\t\t\t\tpos.row = 1;\r\n\t\t\t}\r\n\t\t\tif (!this._isWithinBoundsX(pos, dims)) {\r\n\t\t\t\tpos.row++;\r\n\t\t\t\tpos.col = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tprivate _isWithinBoundsX(pos: INgWidgetPosition, dims: INgWidgetSize) {\r\n\t\treturn (this._maxCols === 0 || pos.col === 1 || (pos.col + dims.x - 1) <= this._maxCols);\r\n\t}\r\n\r\n\tprivate _fixPosToBoundsX(pos: INgWidgetPosition, dims: INgWidgetSize): INgWidgetPosition {\r\n\t\tif (!this._isWithinBoundsX(pos, dims)) {\r\n\t\t\tpos.col = Math.max(this._maxCols - (dims.x - 1), 1);\r\n\t\t\tpos.row ++;\r\n\t\t}\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tprivate _fixSizeToBoundsX(pos: INgWidgetPosition, dims: INgWidgetSize): INgWidgetSize {\r\n\t\tif (!this._isWithinBoundsX(pos, dims)) {\r\n\t\t\tdims.x = Math.max(this._maxCols - (pos.col - 1), 1);\r\n\t\t\tdims.y++;\r\n\t\t}\r\n\t\treturn dims;\r\n\t}\r\n\r\n\tprivate _isWithinBoundsY(pos: INgWidgetPosition, dims: INgWidgetSize) {\r\n\t\treturn (this._maxRows === 0 || pos.row === 1 || (pos.row + dims.y - 1) <= this._maxRows);\r\n\t}\r\n\r\n\tprivate _fixPosToBoundsY(pos: INgWidgetPosition, dims: INgWidgetSize): INgWidgetPosition {\r\n\t\tif (!this._isWithinBoundsY(pos, dims)) {\r\n\t\t\tpos.row = Math.max(this._maxRows - (dims.y - 1), 1);\r\n\t\t\tpos.col++;\r\n\t\t}\r\n\t\treturn pos;\r\n\t}\r\n\r\n\tprivate _fixSizeToBoundsY(pos: INgWidgetPosition, dims: INgWidgetSize): INgWidgetSize {\r\n\t\tif (!this._isWithinBoundsY(pos, dims)) {\r\n\t\t\tdims.y = Math.max(this._maxRows - (pos.row - 1), 1);\r\n\t\t\tdims.x++;\r\n\t\t}\r\n\t\treturn dims;\r\n\t}\r\n\r\n\tprivate _isWithinBounds(pos: INgWidgetPosition, dims: INgWidgetSize) {\r\n\t\treturn this._isWithinBoundsX(pos, dims) && this._isWithinBoundsY(pos, dims);\r\n\t}\r\n\r\n\tprivate _fixPosToBounds(pos: INgWidgetPosition, dims: INgWidgetSize): INgWidgetPosition {\r\n\t\treturn this._fixPosToBoundsX(this._fixPosToBoundsY(pos, dims), dims);\r\n\t}\r\n\r\n\tprivate _fixSizeToBounds(pos: INgWidgetPosition, dims: INgWidgetSize): INgWidgetSize {\r\n\t\treturn this._fixSizeToBoundsX(pos, this._fixSizeToBoundsY(pos, dims));\r\n\t}\r\n\r\n\tprivate _addToGrid(item: NgWidget): void {\r\n\t\t// if( (this.isDragging || this.isResizing) && this.allowOverlap) {\r\n\t\t// \treturn;\r\n\t\t// }\r\n\t\tlet pos: INgWidgetPosition = item.getWidgetPosition();\r\n\t\tconst dims: INgWidgetSize = item.getSize();\r\n\r\n\t\tif (this._hasGridCollision(pos, dims)) {\r\n\t\t\tthis._fixGridCollisions(pos, dims);\r\n\t\t\tpos = item.getWidgetPosition();\r\n\t\t}\r\n\r\n\t\tfor (let j = 0; j < dims.y; j++) {\r\n\t\t\tif (this._itemGrid[pos.row + j] == null) this._itemGrid[pos.row + j] = {};\r\n\r\n\t\t\tfor (let i = 0; i < dims.x; i++) {\r\n\t\t\t\tthis._itemGrid[pos.row + j][pos.col + i] = item;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _removeFromGrid(item: NgWidget): void {\r\n\t\tfor (const y in this._itemGrid)\r\n\t\t\tfor (const x in this._itemGrid[y])\r\n\t\t\t\tif (this._itemGrid[y][x] === item)\r\n\t\t\t\t\tdelete this._itemGrid[y][x];\r\n\t}\r\n\r\n\tprivate _filterGrid(): void {\r\n\t\t// tslint:disable:forin\r\n\t\tfor (const y in this._itemGrid) {\r\n\t\t\tfor (const x in this._itemGrid[y]) {\r\n\t\t\t\tconst item: NgWidget = this._itemGrid[y][x];\r\n\t\t\t\tconst withinRow = <any>y < (item.row + item.sizey) && <any>y >= item.row;\r\n\t\t\t\tconst withinCol = <any>x < (item.col + item.sizex) && <any>x >= item.col;\r\n\r\n\t\t\t\tif (this._items.indexOf(this._itemGrid[y][x]) < 0 || !withinRow || !withinCol) {\r\n\t\t\t\t\tdelete this._itemGrid[y][x];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (Object.keys(this._itemGrid[y]).length === 0) {\r\n\t\t\t\tdelete this._itemGrid[y];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateSize(): void {\r\n\t\tif (this._destroyed) return;\r\n\t\tconst maxCol: number = this._getMaxCol();\r\n\t\tconst maxRow: number = this._getMaxRow();\r\n\r\n\t\tif (maxCol !== this._curMaxCol || maxRow !== this._curMaxRow) {\r\n\t\t\tthis._curMaxCol = maxCol;\r\n\t\t\tthis._curMaxRow = maxRow;\r\n\t\t}\r\n\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'width', '100%'); // (maxCol * (this.colWidth + this.marginLeft + this.marginRight))+'px');\r\n\t\tthis._renderer.setElementStyle(this._ngEl.nativeElement, 'height', (maxRow * (this.rowHeight + this.marginTop + this.marginBottom)) + 'px');\r\n\t}\r\n\r\n\tprivate _getMaxRow(): number {\r\n\t\treturn Math.max.apply(null, this._items.map((item: NgWidget) => item.row + item.sizey - 1));\r\n\t}\r\n\r\n\tprivate _getMaxCol(): number {\r\n\t\treturn Math.max.apply(null, this._items.map((item: NgWidget) => item.col + item.sizex - 1));\r\n\t}\r\n\r\n\tprivate _getMousePosition(e: any): INgWidgetContainerRawPosition {\r\n\t\tif (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\r\n\t\t\te = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\r\n\t\t}\r\n\r\n\t\tconst refPos: any = this._ngEl.nativeElement.getBoundingClientRect();\r\n\r\n\t\tlet left: number = e.clientX - refPos.left;\r\n\t\tlet top: number = e.clientY - refPos.top;\r\n\r\n\t\tif (this.cascade === 'down') top = refPos.top + refPos.height - e.clientY;\r\n\t\tif (this.cascade === 'right') left = refPos.left + refPos.width - e.clientX;\r\n\r\n\t\tif (this.isDragging && this._zoomOnDrag) {\r\n\t\t\tleft *= 2;\r\n\t\t\ttop *= 2;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: left,\r\n\t\t\ttop: top\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getAbsoluteMousePosition(e: any): INgWidgetContainerRawPosition {\r\n\t\tif (((<any>window).TouchEvent && e instanceof TouchEvent) || (e.touches || e.changedTouches)) {\r\n\t\t\te = e.touches.length > 0 ? e.touches[0] : e.changedTouches[0];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tleft: e.clientX,\r\n\t\t\ttop: e.clientY\r\n\t\t};\r\n\t}\r\n\r\n\tprivate _getContainerColumns(): number {\r\n\t\tconst maxWidth: number = this._ngEl.nativeElement.getBoundingClientRect().width;\r\n\t\treturn Math.floor(maxWidth / (this.colWidth + this.marginLeft + this.marginRight));\r\n\t}\r\n\r\n\tprivate _getContainerRows(): number {\r\n\t\tconst maxHeight: number = window.innerHeight - this.marginTop - this.marginBottom;\r\n\t\treturn Math.floor(maxHeight / (this.rowHeight + this.marginTop + this.marginBottom));\r\n\t}\r\n\r\n\tprivate _getItemFromPosition(position: INgWidgetContainerRawPosition): NgWidget {\r\n\t\tfor (const item of this._items) {\r\n\t\t\tconst size: INgWidgetDimensions = item.getDimensions();\r\n\t\t\tconst pos: INgWidgetContainerRawPosition = item.getPosition();\r\n\r\n\t\t\tif (position.left > (pos.left + this.marginLeft) && position.left < (pos.left + this.marginLeft + size.width) &&\r\n\t\t\t\tposition.top > (pos.top + this.marginTop) && position.top < (pos.top + this.marginTop + size.height)) {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate _createPlaceholder(item: NgWidget): void {\r\n\t\tconst pos: INgWidgetPosition = item.getWidgetPosition();\r\n\t\tconst dims: INgWidgetSize = item.getSize();\r\n\r\n\t\tconst factory = this.componentFactoryResolver.resolveComponentFactory(NgWidgetPlaceholder);\r\n\t\tconst componentRef: ComponentRef<NgWidgetPlaceholder> = item.containerRef.createComponent(factory);\r\n\t\tthis._placeholderRef = componentRef;\r\n\t\tconst placeholder: NgWidgetPlaceholder = componentRef.instance;\r\n\t\tplaceholder.registerGrid(this);\r\n\t\tplaceholder.setCascadeMode(this.cascade);\r\n\t\tplaceholder.setGridPosition({ col: pos.col, row: pos.row });\r\n\t\tplaceholder.setSize({ x: dims.x, y: dims.y });\r\n\t}\r\n\r\n\tprivate _emitOnItemChange() {\r\n\t\tthis.onItemChange.emit(this._items.map((item: NgWidget) => item.getEventOutput()));\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n\tselector: '[ngWidgetContainer]',\r\n\tinputs: ['config: ngWidgetContainer'],\r\n\thost: {\r\n\t\t'(mousedown)': 'mouseDownEventHandler($event)',\r\n\t\t'(mousemove)': 'mouseMoveEventHandler($event)',\r\n\t\t'(mouseup)': 'mouseUpEventHandler($event)',\r\n\t\t'(touchstart)': 'mouseDownEventHandler($event)',\r\n\t\t'(touchmove)': 'mouseMoveEventHandler($event)',\r\n\t\t'(touchend)': 'mouseUpEventHandler($event)',\r\n\t\t'(window:resize)': 'resizeEventHandler($event)',\r\n\t\t'(document:mousemove)': 'mouseMoveEventHandler($event)',\r\n\t\t'(document:mouseup)': 'mouseUpEventHandler($event)'\r\n\t}\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: KeyValueDiffers, },\n{type: ElementRef, },\n{type: Renderer, },\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'onDragStart': [{ type: Output },],\n'onDrag': [{ type: Output },],\n'onDragStop': [{ type: Output },],\n'onResizeStart': [{ type: Output },],\n'onResize': [{ type: Output },],\n'onResizeStop': [{ type: Output },],\n'onItemChange': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}